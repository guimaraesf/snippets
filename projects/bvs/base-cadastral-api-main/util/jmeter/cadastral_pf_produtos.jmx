<?xml version="1.0" encoding="UTF-8"?>
<jmeterTestPlan version="1.2" properties="5.0" jmeter="5.0 r1840935">
  <hashTree>
    <TestPlan guiclass="TestPlanGui" testclass="TestPlan" testname="Cadastral PF" enabled="true">
      <stringProp name="TestPlan.comments"></stringProp>
      <boolProp name="TestPlan.functional_mode">false</boolProp>
      <boolProp name="TestPlan.serialize_threadgroups">false</boolProp>
      <elementProp name="TestPlan.user_defined_variables" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="Variáveis Definidas Pelo Usuário" enabled="true">
        <collectionProp name="Arguments.arguments"/>
      </elementProp>
      <stringProp name="TestPlan.user_define_classpath"></stringProp>
    </TestPlan>
    <hashTree>
      <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="Header" enabled="true">
        <collectionProp name="HeaderManager.headers">
          <elementProp name="" elementType="Header">
            <stringProp name="Header.name">Content-Type</stringProp>
            <stringProp name="Header.value">application/xml</stringProp>
          </elementProp>
        </collectionProp>
      </HeaderManager>
      <hashTree/>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="Familia Acerta XML" enabled="false">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Controlador de Iteração" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <intProp name="LoopController.loops">-1</intProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <longProp name="ThreadGroup.start_time">1516646840000</longProp>
        <longProp name="ThreadGroup.end_time">1516646840000</longProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
      </ThreadGroup>
      <hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Acerta Essencial - ${host} - ${documento}" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot; standalone=&quot;yes&quot;?&gt;&#xd;
&lt;acertaContratoEntrada xmlns=&quot;http://boavistaservicos.com.br/familia/acerta/pf&quot;&gt;&#xd;
	&lt;usuario&gt;${codigo8}&lt;/usuario&gt;&#xd;
	&lt;senha&gt;${senha8}&lt;/senha&gt;&#xd;
	&lt;cpf&gt;${documento}&lt;/cpf&gt;&#xd;
	&lt;score&gt;${score}&lt;/score&gt;&#xd;
	&lt;tipoCredito&gt;${tipoCredito}&lt;/tipoCredito&gt;&#xd;
	&lt;telefone&gt;${telefone}&lt;/telefone&gt;&#xd;
	&lt;cep&gt;${cep}&lt;/cep&gt;&#xd;
	&lt;limiteParcela&gt;${limiteParcela}&lt;/limiteParcela&gt;&#xd;
	&lt;sugestaoAprovaReprova&gt;${sugestaoAprovaReprova}&lt;/sugestaoAprovaReprova&gt;&#xd;
	&lt;consultaChequeSimples&gt;S&lt;/consultaChequeSimples&gt;&#xd;
&lt;/acertaContratoEntrada&gt;</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${host}</stringProp>
          <stringProp name="HTTPSampler.port">${port}</stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">FamiliaAcertaPFXmlWeb/essencial</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResultSaver guiclass="ResultSaverGui" testclass="ResultSaver" testname="Salvar" enabled="true">
            <stringProp name="FileSaver.filename">${path}\\acerta_essencial\\acerta_essencial_${documento}.xml</stringProp>
            <boolProp name="FileSaver.errorsonly">false</boolProp>
            <boolProp name="FileSaver.skipautonumber">true</boolProp>
            <boolProp name="FileSaver.skipsuffix">true</boolProp>
            <boolProp name="FileSaver.successonly">true</boolProp>
          </ResultSaver>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Acerta Essencial v2 - ${host} - ${documento}" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot; standalone=&quot;yes&quot;?&gt;&#xd;
&lt;acertaContratoEntrada xmlns=&quot;http://boavistaservicos.com.br/familia/acerta/pf&quot;&gt;&#xd;
	&lt;usuario&gt;${codigo8}&lt;/usuario&gt;&#xd;
	&lt;senha&gt;${senha8}&lt;/senha&gt;&#xd;
	&lt;cpf&gt;${documento}&lt;/cpf&gt;&#xd;
	&lt;score&gt;${score}&lt;/score&gt;&#xd;
	&lt;tipoCredito&gt;${tipoCredito}&lt;/tipoCredito&gt;&#xd;
	&lt;telefone&gt;${telefone}&lt;/telefone&gt;&#xd;
	&lt;cep&gt;${cep}&lt;/cep&gt;&#xd;
	&lt;limiteParcela&gt;${limiteParcela}&lt;/limiteParcela&gt;&#xd;
	&lt;sugestaoAprovaReprova&gt;${sugestaoAprovaReprova}&lt;/sugestaoAprovaReprova&gt;&#xd;
	&lt;consultaChequeSimples&gt;S&lt;/consultaChequeSimples&gt;&#xd;
&lt;/acertaContratoEntrada&gt;</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${host}</stringProp>
          <stringProp name="HTTPSampler.port">${port}</stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">FamiliaAcertaPFXmlWeb/essencial/v2</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResultSaver guiclass="ResultSaverGui" testclass="ResultSaver" testname="Salvar" enabled="true">
            <stringProp name="FileSaver.filename">${path}\\acerta_essencial\\acerta_essencial_v2_${documento}.xml</stringProp>
            <boolProp name="FileSaver.errorsonly">false</boolProp>
            <boolProp name="FileSaver.skipautonumber">true</boolProp>
            <boolProp name="FileSaver.skipsuffix">true</boolProp>
            <boolProp name="FileSaver.successonly">true</boolProp>
          </ResultSaver>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Acerta Essencial - Cheque Superior - ${host} - ${documento}" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot; standalone=&quot;yes&quot;?&gt;&#xd;
&lt;acertaContratoEntrada xmlns=&quot;http://boavistaservicos.com.br/familia/acerta/pf&quot;&gt;&#xd;
	&lt;usuario&gt;${codigo8}&lt;/usuario&gt;&#xd;
	&lt;senha&gt;${senha8}&lt;/senha&gt;&#xd;
	&lt;cpf&gt;${documento}&lt;/cpf&gt;&#xd;
	&lt;score&gt;${score}&lt;/score&gt;&#xd;
	&lt;tipoCredito&gt;${tipoCredito}&lt;/tipoCredito&gt;&#xd;
	&lt;telefone&gt;${telefone}&lt;/telefone&gt;&#xd;
	&lt;cep&gt;${cep}&lt;/cep&gt;&#xd;
	&lt;limiteParcela&gt;${limiteParcela}&lt;/limiteParcela&gt;&#xd;
	&lt;sugestaoAprovaReprova&gt;${sugestaoAprovaReprova}&lt;/sugestaoAprovaReprova&gt;&#xd;
	&lt;consultaChequeCompleta&gt;S&lt;/consultaChequeCompleta&gt;&#xd;
	&lt;banco&gt;${banco}&lt;/banco&gt;&#xd;
	&lt;agencia&gt;${agencia}&lt;/agencia&gt;&#xd;
	&lt;contaCorrente&gt;${contaCorrente}&lt;/contaCorrente&gt;&#xd;
	&lt;digitoContaCorrente&gt;${digitoContaCorrente}&lt;/digitoContaCorrente&gt;&#xd;
	&lt;numeroCheque&gt;${numeroCheque}&lt;/numeroCheque&gt;&#xd;
	&lt;digitoNumeroCheque&gt;${digitoNumeroCheque}&lt;/digitoNumeroCheque&gt;&#xd;
	&lt;totalCheques&gt;${totalCheques}&lt;/totalCheques&gt;&#xd;
	&lt;dataCheque&gt;${dataCheque}&lt;/dataCheque&gt;&#xd;
	&lt;valor&gt;${valor}&lt;/valor&gt;&#xd;
&lt;/acertaContratoEntrada&gt;</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${host}</stringProp>
          <stringProp name="HTTPSampler.port">${port}</stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">FamiliaAcertaPFXmlWeb/essencial</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResultSaver guiclass="ResultSaverGui" testclass="ResultSaver" testname="Salvar" enabled="true">
            <stringProp name="FileSaver.filename">${path}\\acerta_essencial\\acerta_essencial_chqSuperior_${documento}.xml</stringProp>
            <boolProp name="FileSaver.errorsonly">false</boolProp>
            <boolProp name="FileSaver.skipautonumber">true</boolProp>
            <boolProp name="FileSaver.skipsuffix">true</boolProp>
            <boolProp name="FileSaver.successonly">true</boolProp>
          </ResultSaver>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Acerta Essencial - Cheque Inferior - ${host} - ${documento}" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot; standalone=&quot;yes&quot;?&gt;&#xd;
&lt;acertaContratoEntrada xmlns=&quot;http://boavistaservicos.com.br/familia/acerta/pf&quot;&gt;&#xd;
	&lt;usuario&gt;${codigo8}&lt;/usuario&gt;&#xd;
	&lt;senha&gt;${senha8}&lt;/senha&gt;&#xd;
	&lt;cpf&gt;${documento}&lt;/cpf&gt;&#xd;
	&lt;score&gt;${score}&lt;/score&gt;&#xd;
	&lt;tipoCredito&gt;${tipoCredito}&lt;/tipoCredito&gt;&#xd;
	&lt;telefone&gt;${telefone}&lt;/telefone&gt;&#xd;
	&lt;cep&gt;${cep}&lt;/cep&gt;&#xd;
	&lt;limiteParcela&gt;${limiteParcela}&lt;/limiteParcela&gt;&#xd;
	&lt;sugestaoAprovaReprova&gt;${sugestaoAprovaReprova}&lt;/sugestaoAprovaReprova&gt;&#xd;
	&lt;consultaChequeCompleta&gt;S&lt;/consultaChequeCompleta&gt;&#xd;
	&lt;cmc7Posicao1&gt;${cmc7Posicao1}&lt;/cmc7Posicao1&gt;&#xd;
	&lt;cmc7Posicao2&gt;${cmc7Posicao2}&lt;/cmc7Posicao2&gt;&#xd;
	&lt;cmc7Posicao3&gt;${cmc7Posicao3}&lt;/cmc7Posicao3&gt;&#xd;
	&lt;totalCheques&gt;${totalCheques}&lt;/totalCheques&gt;&#xd;
	&lt;dataCheque&gt;${dataCheque}&lt;/dataCheque&gt;&#xd;
	&lt;valor&gt;${valor}&lt;/valor&gt;&#xd;
&lt;/acertaContratoEntrada&gt;</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${host}</stringProp>
          <stringProp name="HTTPSampler.port">${port}</stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">FamiliaAcertaPFXmlWeb/essencial</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResultSaver guiclass="ResultSaverGui" testclass="ResultSaver" testname="Salvar" enabled="true">
            <stringProp name="FileSaver.filename">${path}\\acerta_essencial\\acerta_essencial_chqInferior_${documento}.xml</stringProp>
            <boolProp name="FileSaver.errorsonly">false</boolProp>
            <boolProp name="FileSaver.skipautonumber">true</boolProp>
            <boolProp name="FileSaver.skipsuffix">true</boolProp>
            <boolProp name="FileSaver.successonly">true</boolProp>
          </ResultSaver>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Acerta Mais - ${host} - ${documento}" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot; standalone=&quot;yes&quot;?&gt;&#xd;
&lt;acertaContratoEntrada xmlns=&quot;http://boavistaservicos.com.br/familia/acerta/pf&quot;&gt;&#xd;
	&lt;usuario&gt;${codigo8}&lt;/usuario&gt;&#xd;
	&lt;senha&gt;${senha8}&lt;/senha&gt;&#xd;
	&lt;cpf&gt;${documento}&lt;/cpf&gt;&#xd;
	&lt;score&gt;${score}&lt;/score&gt;&#xd;
	&lt;tipoCredito&gt;${tipoCredito}&lt;/tipoCredito&gt;&#xd;
	&lt;telefone&gt;${telefone}&lt;/telefone&gt;&#xd;
	&lt;cep&gt;${cep}&lt;/cep&gt;&#xd;
	&lt;limiteParcela&gt;${limiteParcela}&lt;/limiteParcela&gt;&#xd;
	&lt;consultaChequeSimples&gt;S&lt;/consultaChequeSimples&gt;&#xd;
&lt;/acertaContratoEntrada&gt;</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${host}</stringProp>
          <stringProp name="HTTPSampler.port">${port}</stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">FamiliaAcertaPFXmlWeb/mais</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResultSaver guiclass="ResultSaverGui" testclass="ResultSaver" testname="Salvar" enabled="true">
            <stringProp name="FileSaver.filename">${path}\\acerta_mais\\acerta_mais_${documento}.xml</stringProp>
            <boolProp name="FileSaver.errorsonly">false</boolProp>
            <boolProp name="FileSaver.skipautonumber">true</boolProp>
            <boolProp name="FileSaver.skipsuffix">true</boolProp>
            <boolProp name="FileSaver.successonly">true</boolProp>
          </ResultSaver>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Acerta Mais v2 - ${host} - ${documento}" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot; standalone=&quot;yes&quot;?&gt;&#xd;
&lt;acertaContratoEntrada xmlns=&quot;http://boavistaservicos.com.br/familia/acerta/pf&quot;&gt;&#xd;
	&lt;usuario&gt;${codigo8}&lt;/usuario&gt;&#xd;
	&lt;senha&gt;${senha8}&lt;/senha&gt;&#xd;
	&lt;cpf&gt;${documento}&lt;/cpf&gt;&#xd;
	&lt;score&gt;${score}&lt;/score&gt;&#xd;
	&lt;tipoCredito&gt;${tipoCredito}&lt;/tipoCredito&gt;&#xd;
	&lt;telefone&gt;${telefone}&lt;/telefone&gt;&#xd;
	&lt;cep&gt;${cep}&lt;/cep&gt;&#xd;
	&lt;limiteParcela&gt;${limiteParcela}&lt;/limiteParcela&gt;&#xd;
	&lt;consultaChequeSimples&gt;S&lt;/consultaChequeSimples&gt;&#xd;
&lt;/acertaContratoEntrada&gt;</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${host}</stringProp>
          <stringProp name="HTTPSampler.port">${port}</stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">FamiliaAcertaPFXmlWeb/mais/v2</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResultSaver guiclass="ResultSaverGui" testclass="ResultSaver" testname="Salvar" enabled="true">
            <stringProp name="FileSaver.filename">${path}\\acerta_mais\\acerta_mais_v2_${documento}.xml</stringProp>
            <boolProp name="FileSaver.errorsonly">false</boolProp>
            <boolProp name="FileSaver.skipautonumber">true</boolProp>
            <boolProp name="FileSaver.skipsuffix">true</boolProp>
            <boolProp name="FileSaver.successonly">true</boolProp>
          </ResultSaver>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Acerta Mais - Cheque Superior - ${host} - ${documento}" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot; standalone=&quot;yes&quot;?&gt;&#xd;
&lt;acertaContratoEntrada xmlns=&quot;http://boavistaservicos.com.br/familia/acerta/pf&quot;&gt;&#xd;
	&lt;usuario&gt;${codigo8}&lt;/usuario&gt;&#xd;
	&lt;senha&gt;${senha8}&lt;/senha&gt;&#xd;
	&lt;cpf&gt;${documento}&lt;/cpf&gt;&#xd;
	&lt;score&gt;${score}&lt;/score&gt;&#xd;
	&lt;tipoCredito&gt;${tipoCredito}&lt;/tipoCredito&gt;&#xd;
	&lt;telefone&gt;${telefone}&lt;/telefone&gt;&#xd;
	&lt;cep&gt;${cep}&lt;/cep&gt;&#xd;
	&lt;limiteParcela&gt;${limiteParcela}&lt;/limiteParcela&gt;&#xd;
	&lt;consultaChequeCompleta&gt;S&lt;/consultaChequeCompleta&gt;&#xd;
	&lt;banco&gt;${banco}&lt;/banco&gt;&#xd;
	&lt;agencia&gt;${agencia}&lt;/agencia&gt;&#xd;
	&lt;contaCorrente&gt;${contaCorrente}&lt;/contaCorrente&gt;&#xd;
	&lt;digitoContaCorrente&gt;${digitoContaCorrente}&lt;/digitoContaCorrente&gt;&#xd;
	&lt;numeroCheque&gt;${numeroCheque}&lt;/numeroCheque&gt;&#xd;
	&lt;digitoNumeroCheque&gt;${digitoNumeroCheque}&lt;/digitoNumeroCheque&gt;&#xd;
	&lt;totalCheques&gt;${totalCheques}&lt;/totalCheques&gt;&#xd;
	&lt;dataCheque&gt;${dataCheque}&lt;/dataCheque&gt;&#xd;
	&lt;valor&gt;${valor}&lt;/valor&gt;&#xd;
&lt;/acertaContratoEntrada&gt;</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${host}</stringProp>
          <stringProp name="HTTPSampler.port">${port}</stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">FamiliaAcertaPFXmlWeb/mais</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResultSaver guiclass="ResultSaverGui" testclass="ResultSaver" testname="Salvar" enabled="true">
            <stringProp name="FileSaver.filename">${path}\\acerta_mais\\acerta_mais_chqSuperior_${documento}.xml</stringProp>
            <boolProp name="FileSaver.errorsonly">false</boolProp>
            <boolProp name="FileSaver.skipautonumber">true</boolProp>
            <boolProp name="FileSaver.skipsuffix">true</boolProp>
            <boolProp name="FileSaver.successonly">true</boolProp>
          </ResultSaver>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Acerta Mais - Cheque Inferior - ${host} - ${documento}" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot; standalone=&quot;yes&quot;?&gt;&#xd;
&lt;acertaContratoEntrada xmlns=&quot;http://boavistaservicos.com.br/familia/acerta/pf&quot;&gt;&#xd;
	&lt;usuario&gt;${codigo8}&lt;/usuario&gt;&#xd;
	&lt;senha&gt;${senha8}&lt;/senha&gt;&#xd;
	&lt;cpf&gt;${documento}&lt;/cpf&gt;&#xd;
	&lt;score&gt;${score}&lt;/score&gt;&#xd;
	&lt;tipoCredito&gt;${tipoCredito}&lt;/tipoCredito&gt;&#xd;
	&lt;telefone&gt;${telefone}&lt;/telefone&gt;&#xd;
	&lt;cep&gt;${cep}&lt;/cep&gt;&#xd;
	&lt;limiteParcela&gt;${limiteParcela}&lt;/limiteParcela&gt;&#xd;
	&lt;consultaChequeCompleta&gt;S&lt;/consultaChequeCompleta&gt;&#xd;
	&lt;cmc7Posicao1&gt;${cmc7Posicao1}&lt;/cmc7Posicao1&gt;&#xd;
	&lt;cmc7Posicao2&gt;${cmc7Posicao2}&lt;/cmc7Posicao2&gt;&#xd;
	&lt;cmc7Posicao3&gt;${cmc7Posicao3}&lt;/cmc7Posicao3&gt;&#xd;
	&lt;totalCheques&gt;${totalCheques}&lt;/totalCheques&gt;&#xd;
	&lt;dataCheque&gt;${dataCheque}&lt;/dataCheque&gt;&#xd;
	&lt;valor&gt;${valor}&lt;/valor&gt;&#xd;
&lt;/acertaContratoEntrada&gt;</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${host}</stringProp>
          <stringProp name="HTTPSampler.port">${port}</stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">FamiliaAcertaPFXmlWeb/mais</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResultSaver guiclass="ResultSaverGui" testclass="ResultSaver" testname="Salvar" enabled="true">
            <stringProp name="FileSaver.filename">${path}\\acerta_mais\\acerta_mais_chqInferior_${documento}.xml</stringProp>
            <boolProp name="FileSaver.errorsonly">false</boolProp>
            <boolProp name="FileSaver.skipautonumber">true</boolProp>
            <boolProp name="FileSaver.skipsuffix">true</boolProp>
            <boolProp name="FileSaver.successonly">true</boolProp>
          </ResultSaver>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Acerta Completo - ${host} - ${documento}" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot; standalone=&quot;yes&quot;?&gt;&#xd;
&lt;acertaContratoEntrada xmlns=&quot;http://boavistaservicos.com.br/familia/acerta/pf&quot;&gt;&#xd;
	&lt;usuario&gt;${codigo8}&lt;/usuario&gt;&#xd;
	&lt;senha&gt;${senha8}&lt;/senha&gt;&#xd;
	&lt;cpf&gt;${documento}&lt;/cpf&gt;&#xd;
	&lt;score&gt;${score}&lt;/score&gt;&#xd;
	&lt;tipoCredito&gt;${tipoCredito}&lt;/tipoCredito&gt;&#xd;
	&lt;telefone&gt;${telefone}&lt;/telefone&gt;&#xd;
	&lt;cep&gt;${cep}&lt;/cep&gt;&#xd;
	&lt;consultaChequeSimples&gt;S&lt;/consultaChequeSimples&gt;&#xd;
&lt;/acertaContratoEntrada&gt;</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${host}</stringProp>
          <stringProp name="HTTPSampler.port">${port}</stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">FamiliaAcertaPFXmlWeb/completo</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResultSaver guiclass="ResultSaverGui" testclass="ResultSaver" testname="Salvar" enabled="true">
            <stringProp name="FileSaver.filename">${path}\\acerta_completo\\acerta_completo_${documento}.xml</stringProp>
            <boolProp name="FileSaver.errorsonly">false</boolProp>
            <boolProp name="FileSaver.skipautonumber">true</boolProp>
            <boolProp name="FileSaver.skipsuffix">true</boolProp>
            <boolProp name="FileSaver.successonly">true</boolProp>
          </ResultSaver>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Acerta Completo v2 - ${host} - ${documento}" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot; standalone=&quot;yes&quot;?&gt;&#xd;
&lt;acertaContratoEntrada xmlns=&quot;http://boavistaservicos.com.br/familia/acerta/pf&quot;&gt;&#xd;
	&lt;usuario&gt;${codigo8}&lt;/usuario&gt;&#xd;
	&lt;senha&gt;${senha8}&lt;/senha&gt;&#xd;
	&lt;cpf&gt;${documento}&lt;/cpf&gt;&#xd;
	&lt;score&gt;${score}&lt;/score&gt;&#xd;
	&lt;tipoCredito&gt;${tipoCredito}&lt;/tipoCredito&gt;&#xd;
	&lt;telefone&gt;${telefone}&lt;/telefone&gt;&#xd;
	&lt;cep&gt;${cep}&lt;/cep&gt;&#xd;
	&lt;consultaChequeSimples&gt;S&lt;/consultaChequeSimples&gt;&#xd;
&lt;/acertaContratoEntrada&gt;</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${host}</stringProp>
          <stringProp name="HTTPSampler.port">${port}</stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">FamiliaAcertaPFXmlWeb/completo/v2</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResultSaver guiclass="ResultSaverGui" testclass="ResultSaver" testname="Salvar" enabled="true">
            <stringProp name="FileSaver.filename">${path}\\acerta_completo\\acerta_completo_v2_${documento}.xml</stringProp>
            <boolProp name="FileSaver.errorsonly">false</boolProp>
            <boolProp name="FileSaver.skipautonumber">true</boolProp>
            <boolProp name="FileSaver.skipsuffix">true</boolProp>
            <boolProp name="FileSaver.successonly">true</boolProp>
          </ResultSaver>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Acerta Completo - Cheque Superior - ${host} - ${documento}" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot; standalone=&quot;yes&quot;?&gt;&#xd;
&lt;acertaContratoEntrada xmlns=&quot;http://boavistaservicos.com.br/familia/acerta/pf&quot;&gt;&#xd;
	&lt;usuario&gt;${codigo8}&lt;/usuario&gt;&#xd;
	&lt;senha&gt;${senha8}&lt;/senha&gt;&#xd;
	&lt;cpf&gt;${documento}&lt;/cpf&gt;&#xd;
	&lt;score&gt;${score}&lt;/score&gt;&#xd;
	&lt;tipoCredito&gt;${tipoCredito}&lt;/tipoCredito&gt;&#xd;
	&lt;telefone&gt;${telefone}&lt;/telefone&gt;&#xd;
	&lt;cep&gt;${cep}&lt;/cep&gt;&#xd;
	&lt;consultaChequeCompleta&gt;S&lt;/consultaChequeCompleta&gt;&#xd;
	&lt;banco&gt;${banco}&lt;/banco&gt;&#xd;
	&lt;agencia&gt;${agencia}&lt;/agencia&gt;&#xd;
	&lt;contaCorrente&gt;${contaCorrente}&lt;/contaCorrente&gt;&#xd;
	&lt;digitoContaCorrente&gt;${digitoContaCorrente}&lt;/digitoContaCorrente&gt;&#xd;
	&lt;numeroCheque&gt;${numeroCheque}&lt;/numeroCheque&gt;&#xd;
	&lt;digitoNumeroCheque&gt;${digitoNumeroCheque}&lt;/digitoNumeroCheque&gt;&#xd;
	&lt;totalCheques&gt;${totalCheques}&lt;/totalCheques&gt;&#xd;
	&lt;dataCheque&gt;${dataCheque}&lt;/dataCheque&gt;&#xd;
	&lt;valor&gt;${valor}&lt;/valor&gt;&#xd;
&lt;/acertaContratoEntrada&gt;</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${host}</stringProp>
          <stringProp name="HTTPSampler.port">${port}</stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">FamiliaAcertaPFXmlWeb/completo</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResultSaver guiclass="ResultSaverGui" testclass="ResultSaver" testname="Salvar" enabled="true">
            <stringProp name="FileSaver.filename">${path}\\acerta_completo\\acerta_completo_chqSuperior_${documento}.xml</stringProp>
            <boolProp name="FileSaver.errorsonly">false</boolProp>
            <boolProp name="FileSaver.skipautonumber">true</boolProp>
            <boolProp name="FileSaver.skipsuffix">true</boolProp>
            <boolProp name="FileSaver.successonly">true</boolProp>
          </ResultSaver>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Acerta Completo - Cheque Inferior - ${host} - ${documento}" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot; standalone=&quot;yes&quot;?&gt;&#xd;
&lt;acertaContratoEntrada xmlns=&quot;http://boavistaservicos.com.br/familia/acerta/pf&quot;&gt;&#xd;
	&lt;usuario&gt;${codigo8}&lt;/usuario&gt;&#xd;
	&lt;senha&gt;${senha8}&lt;/senha&gt;&#xd;
	&lt;cpf&gt;${documento}&lt;/cpf&gt;&#xd;
	&lt;score&gt;${score}&lt;/score&gt;&#xd;
	&lt;tipoCredito&gt;${tipoCredito}&lt;/tipoCredito&gt;&#xd;
	&lt;telefone&gt;${telefone}&lt;/telefone&gt;&#xd;
	&lt;cep&gt;${cep}&lt;/cep&gt;&#xd;
	&lt;consultaChequeCompleta&gt;S&lt;/consultaChequeCompleta&gt;&#xd;
	&lt;cmc7Posicao1&gt;${cmc7Posicao1}&lt;/cmc7Posicao1&gt;&#xd;
	&lt;cmc7Posicao2&gt;${cmc7Posicao2}&lt;/cmc7Posicao2&gt;&#xd;
	&lt;cmc7Posicao3&gt;${cmc7Posicao3}&lt;/cmc7Posicao3&gt;&#xd;
	&lt;totalCheques&gt;${totalCheques}&lt;/totalCheques&gt;&#xd;
	&lt;dataCheque&gt;${dataCheque}&lt;/dataCheque&gt;&#xd;
	&lt;valor&gt;${valor}&lt;/valor&gt;&#xd;
&lt;/acertaContratoEntrada&gt;</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${host}</stringProp>
          <stringProp name="HTTPSampler.port">${port}</stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">FamiliaAcertaPFXmlWeb/completo</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResultSaver guiclass="ResultSaverGui" testclass="ResultSaver" testname="Salvar" enabled="true">
            <stringProp name="FileSaver.filename">${path}\\acerta_completo\\acerta_completo_chqInferior_${documento}.xml</stringProp>
            <boolProp name="FileSaver.errorsonly">false</boolProp>
            <boolProp name="FileSaver.skipautonumber">true</boolProp>
            <boolProp name="FileSaver.skipsuffix">true</boolProp>
            <boolProp name="FileSaver.successonly">true</boolProp>
          </ResultSaver>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Acerta Cadastral - ${host} - ${documento}" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot; standalone=&quot;yes&quot;?&gt;&#xd;
&lt;acertaContratoEntrada xmlns=&quot;http://boavistaservicos.com.br/familia/acerta/pf&quot;&gt;&#xd;
	&lt;usuario&gt;${codigo8}&lt;/usuario&gt;&#xd;
	&lt;senha&gt;${senha8}&lt;/senha&gt;&#xd;
	&lt;cpf&gt;${documento}&lt;/cpf&gt;&#xd;
	&lt;telefone&gt;${telefone}&lt;/telefone&gt;&#xd;
	&lt;cep&gt;${cep}&lt;/cep&gt;&#xd;
&lt;/acertaContratoEntrada&gt;</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${host}</stringProp>
          <stringProp name="HTTPSampler.port">${port}</stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">FamiliaAcertaPFXmlWeb/cadastral</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResultSaver guiclass="ResultSaverGui" testclass="ResultSaver" testname="Salvar" enabled="true">
            <stringProp name="FileSaver.filename">${path}\\acerta_cadastral\\acerta_cadastral_${documento}.xml</stringProp>
            <boolProp name="FileSaver.errorsonly">false</boolProp>
            <boolProp name="FileSaver.skipautonumber">true</boolProp>
            <boolProp name="FileSaver.skipsuffix">true</boolProp>
            <boolProp name="FileSaver.successonly">true</boolProp>
          </ResultSaver>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Acerta Cheque (Simples) - ${host} - ${documento}" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot; standalone=&quot;yes&quot;?&gt;&#xd;
&lt;acertaContratoEntrada xmlns=&quot;http://boavistaservicos.com.br/familia/acerta/pf&quot;&gt;&#xd;
	&lt;usuario&gt;${codigo8}&lt;/usuario&gt;&#xd;
	&lt;senha&gt;${senha8}&lt;/senha&gt;&#xd;
	&lt;cpf&gt;${documento}&lt;/cpf&gt;&#xd;
	&lt;telefone&gt;${telefone}&lt;/telefone&gt;&#xd;
	&lt;cep&gt;${cep}&lt;/cep&gt;&#xd;
&lt;/acertaContratoEntrada&gt;</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${host}</stringProp>
          <stringProp name="HTTPSampler.port">${port}</stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">FamiliaAcertaPFXmlWeb/cheque</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResultSaver guiclass="ResultSaverGui" testclass="ResultSaver" testname="Salvar" enabled="true">
            <stringProp name="FileSaver.filename">${path}\\acerta_cheque\\acerta_cheque_${documento}.xml</stringProp>
            <boolProp name="FileSaver.errorsonly">false</boolProp>
            <boolProp name="FileSaver.skipautonumber">true</boolProp>
            <boolProp name="FileSaver.skipsuffix">true</boolProp>
            <boolProp name="FileSaver.successonly">true</boolProp>
          </ResultSaver>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Acerta Cheque - Cheque Superior - ${host} - ${documento}" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot; standalone=&quot;yes&quot;?&gt;&#xd;
&lt;acertaContratoEntrada xmlns=&quot;http://boavistaservicos.com.br/familia/acerta/pf&quot;&gt;&#xd;
	&lt;usuario&gt;${codigo8}&lt;/usuario&gt;&#xd;
	&lt;senha&gt;${senha8}&lt;/senha&gt;&#xd;
	&lt;cpf&gt;${documento}&lt;/cpf&gt;&#xd;
	&lt;telefone&gt;${telefone}&lt;/telefone&gt;&#xd;
	&lt;cep&gt;${cep}&lt;/cep&gt;&#xd;
	&lt;consultaChequeCompleta&gt;S&lt;/consultaChequeCompleta&gt;&#xd;
	&lt;banco&gt;${banco}&lt;/banco&gt;&#xd;
	&lt;agencia&gt;${agencia}&lt;/agencia&gt;&#xd;
	&lt;contaCorrente&gt;${contaCorrente}&lt;/contaCorrente&gt;&#xd;
	&lt;digitoContaCorrente&gt;${digitoContaCorrente}&lt;/digitoContaCorrente&gt;&#xd;
	&lt;numeroCheque&gt;${numeroCheque}&lt;/numeroCheque&gt;&#xd;
	&lt;digitoNumeroCheque&gt;${digitoNumeroCheque}&lt;/digitoNumeroCheque&gt;&#xd;
	&lt;totalCheques&gt;${totalCheques}&lt;/totalCheques&gt;&#xd;
	&lt;dataCheque&gt;${dataCheque}&lt;/dataCheque&gt;&#xd;
	&lt;valor&gt;${valor}&lt;/valor&gt;&#xd;
&lt;/acertaContratoEntrada&gt;</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${host}</stringProp>
          <stringProp name="HTTPSampler.port">${port}</stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">FamiliaAcertaPFXmlWeb/cheque</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResultSaver guiclass="ResultSaverGui" testclass="ResultSaver" testname="Salvar" enabled="true">
            <stringProp name="FileSaver.filename">${path}\\acerta_cheque\\acerta_cheque_chqSuperior_${documento}.xml</stringProp>
            <boolProp name="FileSaver.errorsonly">false</boolProp>
            <boolProp name="FileSaver.skipautonumber">true</boolProp>
            <boolProp name="FileSaver.skipsuffix">true</boolProp>
            <boolProp name="FileSaver.successonly">true</boolProp>
          </ResultSaver>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Acerta Cheque - Cheque Inferior - ${host} - ${documento}" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot; standalone=&quot;yes&quot;?&gt;&#xd;
&lt;acertaContratoEntrada xmlns=&quot;http://boavistaservicos.com.br/familia/acerta/pf&quot;&gt;&#xd;
	&lt;usuario&gt;${codigo8}&lt;/usuario&gt;&#xd;
	&lt;senha&gt;${senha8}&lt;/senha&gt;&#xd;
	&lt;cpf&gt;${documento}&lt;/cpf&gt;&#xd;
	&lt;telefone&gt;${telefone}&lt;/telefone&gt;&#xd;
	&lt;cep&gt;${cep}&lt;/cep&gt;&#xd;
	&lt;consultaChequeCompleta&gt;S&lt;/consultaChequeCompleta&gt;&#xd;
	&lt;cmc7Posicao1&gt;${cmc7Posicao1}&lt;/cmc7Posicao1&gt;&#xd;
	&lt;cmc7Posicao2&gt;${cmc7Posicao2}&lt;/cmc7Posicao2&gt;&#xd;
	&lt;cmc7Posicao3&gt;${cmc7Posicao3}&lt;/cmc7Posicao3&gt;&#xd;
	&lt;totalCheques&gt;${totalCheques}&lt;/totalCheques&gt;&#xd;
	&lt;dataCheque&gt;${dataCheque}&lt;/dataCheque&gt;&#xd;
	&lt;valor&gt;${valor}&lt;/valor&gt;&#xd;
&lt;/acertaContratoEntrada&gt;</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${host}</stringProp>
          <stringProp name="HTTPSampler.port">${port}</stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">FamiliaAcertaPFXmlWeb/cheque</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResultSaver guiclass="ResultSaverGui" testclass="ResultSaver" testname="Salvar" enabled="true">
            <stringProp name="FileSaver.filename">${path}\\acerta_cheque\\acerta_cheque_chqInferior_${documento}.xml</stringProp>
            <boolProp name="FileSaver.errorsonly">false</boolProp>
            <boolProp name="FileSaver.skipautonumber">true</boolProp>
            <boolProp name="FileSaver.skipsuffix">true</boolProp>
            <boolProp name="FileSaver.successonly">true</boolProp>
          </ResultSaver>
          <hashTree/>
        </hashTree>
        <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="Dados de entrada" enabled="true">
          <collectionProp name="Arguments.arguments">
            <elementProp name="score" elementType="Argument">
              <stringProp name="Argument.name">score</stringProp>
              <stringProp name="Argument.value">09</stringProp>
              <stringProp name="Argument.desc">No formato &apos;XX&apos;</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="tipoCredito" elementType="Argument">
              <stringProp name="Argument.name">tipoCredito</stringProp>
              <stringProp name="Argument.value">CC</stringProp>
              <stringProp name="Argument.desc">No formato &apos;XX&apos;</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="telefone" elementType="Argument">
              <stringProp name="Argument.name">telefone</stringProp>
              <stringProp name="Argument.value">1130166296</stringProp>
              <stringProp name="Argument.desc">No formato &apos;0000000000&apos;</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="cep" elementType="Argument">
              <stringProp name="Argument.name">cep</stringProp>
              <stringProp name="Argument.value">01014911</stringProp>
              <stringProp name="Argument.desc">No formato &apos;00000000&apos;</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="limiteParcela" elementType="Argument">
              <stringProp name="Argument.name">limiteParcela</stringProp>
              <stringProp name="Argument.value">S</stringProp>
              <stringProp name="Argument.desc">&apos;S&apos; para Sim ou &apos;N&apos; para não</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="sugestaoAprovaReprova" elementType="Argument">
              <stringProp name="Argument.name">sugestaoAprovaReprova</stringProp>
              <stringProp name="Argument.value">S</stringProp>
              <stringProp name="Argument.desc">&apos;S&apos; para Sim ou &apos;N&apos; para não</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
          </collectionProp>
        </Arguments>
        <hashTree/>
        <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="Dados do cheque" enabled="true">
          <collectionProp name="Arguments.arguments">
            <elementProp name="banco" elementType="Argument">
              <stringProp name="Argument.name">banco</stringProp>
              <stringProp name="Argument.value">341</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="agencia" elementType="Argument">
              <stringProp name="Argument.name">agencia</stringProp>
              <stringProp name="Argument.value">7990</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="contaCorrente" elementType="Argument">
              <stringProp name="Argument.name">contaCorrente</stringProp>
              <stringProp name="Argument.value">165</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="digitoContaCorrente" elementType="Argument">
              <stringProp name="Argument.name">digitoContaCorrente</stringProp>
              <stringProp name="Argument.value">8</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="numeroCheque" elementType="Argument">
              <stringProp name="Argument.name">numeroCheque</stringProp>
              <stringProp name="Argument.value">109</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="digitoNumeroCheque" elementType="Argument">
              <stringProp name="Argument.name">digitoNumeroCheque</stringProp>
              <stringProp name="Argument.value">0</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="totalCheques" elementType="Argument">
              <stringProp name="Argument.name">totalCheques</stringProp>
              <stringProp name="Argument.value"></stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="dataCheque" elementType="Argument">
              <stringProp name="Argument.name">dataCheque</stringProp>
              <stringProp name="Argument.value"></stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="valor" elementType="Argument">
              <stringProp name="Argument.name">valor</stringProp>
              <stringProp name="Argument.value"></stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
          </collectionProp>
        </Arguments>
        <hashTree/>
        <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="CMC7" enabled="true">
          <collectionProp name="Arguments.arguments">
            <elementProp name="cmc7Posicao1" elementType="Argument">
              <stringProp name="Argument.name">cmc7Posicao1</stringProp>
              <stringProp name="Argument.value">34179909</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="cmc7Posicao2" elementType="Argument">
              <stringProp name="Argument.name">cmc7Posicao2</stringProp>
              <stringProp name="Argument.value">0180001095</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="cmc7Posicao3" elementType="Argument">
              <stringProp name="Argument.name">cmc7Posicao3</stringProp>
              <stringProp name="Argument.value">361100016585</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="totalCheques" elementType="Argument">
              <stringProp name="Argument.name">totalCheques</stringProp>
              <stringProp name="Argument.value">0</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="dataCheque" elementType="Argument">
              <stringProp name="Argument.name">dataCheque</stringProp>
              <stringProp name="Argument.value"></stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="valor" elementType="Argument">
              <stringProp name="Argument.name">valor</stringProp>
              <stringProp name="Argument.value"></stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
          </collectionProp>
        </Arguments>
        <hashTree/>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="Telco PF" enabled="false">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Controlador de Iteração" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <intProp name="LoopController.loops">-1</intProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <longProp name="ThreadGroup.start_time">1516646840000</longProp>
        <longProp name="ThreadGroup.end_time">1516646840000</longProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
      </ThreadGroup>
      <hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Telco PF - ${host} - ${documento}" enabled="false">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Variáveis Definidas Pelo Usuário" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="consulta" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">CSR60+++01++++++++++++++++++++++++++++++00315626TBL626++TELCOPF+N12T1000${documento}++++++++++++++++++++++++++++++++++++++++++++++++++++++++++OU00000000000+++++++++++++++++++</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">consulta</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">bvsntt.bvsnet.com.br</stringProp>
          <stringProp name="HTTPSampler.port">${port}</stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">cgi-bin/db2www/netpo028.mbr/string</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResultSaver guiclass="ResultSaverGui" testclass="ResultSaver" testname="Salvar" enabled="true">
            <stringProp name="FileSaver.filename">${path}\\telco_pf\\telco_pf_${documento}.txt</stringProp>
            <boolProp name="FileSaver.errorsonly">false</boolProp>
            <boolProp name="FileSaver.skipautonumber">true</boolProp>
            <boolProp name="FileSaver.skipsuffix">true</boolProp>
            <boolProp name="FileSaver.successonly">true</boolProp>
          </ResultSaver>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Telco PF XML - ${host} - ${documento}" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Variáveis Definidas Pelo Usuário" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="codigoCliente" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">${codigo8}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">codigoCliente</stringProp>
              </elementProp>
              <elementProp name="senha" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">${senha8}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">senha</stringProp>
              </elementProp>
              <elementProp name="layout" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">EFX11</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">layout</stringProp>
              </elementProp>
              <elementProp name="stringConsulta" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
                <stringProp name="Argument.value">&lt;EFX11&gt;&lt;header&gt;&lt;tipoLayout&gt;EFX11&lt;/tipoLayout&gt;&lt;numeroDocumento&gt;${documento}&lt;/numeroDocumento&gt;&lt;tipoDocumento&gt;1&lt;/tipoDocumento&gt;&lt;identificacao&gt;10&lt;/identificacao&gt;&lt;dadosCadastrais&gt;S&lt;/dadosCadastrais&gt;&lt;localizacao&gt;S&lt;/localizacao&gt;&lt;participacoesEmpresas&gt;S&lt;/participacoesEmpresas&gt;&lt;consultasCPF&gt;S&lt;/consultasCPF&gt;&lt;consultasCheques&gt;S&lt;/consultasCheques&gt;&lt;protestos&gt;S&lt;/protestos&gt;&lt;scoreConsumer&gt;S&lt;/scoreConsumer&gt;&lt;documentos&gt;S&lt;/documentos&gt;&lt;pendencias_restricoes_financeiras_acsp&gt;S&lt;/pendencias_restricoes_financeiras_acsp&gt;&lt;Cheques&gt;S&lt;/Cheques&gt;&lt;Falencia&gt;S&lt;/Falencia&gt;&lt;detalhe_acoes_civeis&gt;S&lt;/detalhe_acoes_civeis&gt;&lt;/header&gt;&lt;/EFX11&gt;</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">stringConsulta</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${host}</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">Efx11VivoXml/telcopf/ConectarHttps</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResultSaver guiclass="ResultSaverGui" testclass="ResultSaver" testname="Salvar" enabled="true">
            <stringProp name="FileSaver.filename">${path}\\telco_pf\\telco_pf_xml_${documento}.xml</stringProp>
            <boolProp name="FileSaver.errorsonly">false</boolProp>
            <boolProp name="FileSaver.skipautonumber">true</boolProp>
            <boolProp name="FileSaver.skipsuffix">true</boolProp>
            <boolProp name="FileSaver.successonly">true</boolProp>
          </ResultSaver>
          <hashTree/>
        </hashTree>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="Master" enabled="false">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Controlador de Iteração" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <intProp name="LoopController.loops">-1</intProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <longProp name="ThreadGroup.start_time">1516646840000</longProp>
        <longProp name="ThreadGroup.end_time">1516646840000</longProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
      </ThreadGroup>
      <hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Master - ${host} - ${documento}" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Variáveis Definidas Pelo Usuário" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="consulta" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">CSR60+++01++++++++++++++++++++++++++++++00315626TBL626++MASTER01012T1000${documento}Willian+Stremel+++++++++++++++++++++++++++++++++++24041987XX000000000006804041009++++++++X++++++++</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">consulta</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">bvsntt.bvsnet.com.br</stringProp>
          <stringProp name="HTTPSampler.port">${port}</stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">cgi-bin/db2www/netpo028.mbr/string</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResultSaver guiclass="ResultSaverGui" testclass="ResultSaver" testname="Salvar" enabled="true">
            <stringProp name="FileSaver.filename">${path}\\telco_pf\\telco_pf_${documento}.txt</stringProp>
            <boolProp name="FileSaver.errorsonly">false</boolProp>
            <boolProp name="FileSaver.skipautonumber">true</boolProp>
            <boolProp name="FileSaver.skipsuffix">true</boolProp>
            <boolProp name="FileSaver.successonly">true</boolProp>
          </ResultSaver>
          <hashTree/>
        </hashTree>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="Familia Consumer XML" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Controlador de Iteração" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <intProp name="LoopController.loops">-1</intProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">15</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <longProp name="ThreadGroup.start_time">1537816921000</longProp>
        <longProp name="ThreadGroup.end_time">1537816921000</longProp>
        <boolProp name="ThreadGroup.scheduler">true</boolProp>
        <stringProp name="ThreadGroup.duration">1800</stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
      </ThreadGroup>
      <hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="BV Pessoal Gold - ${documento}" enabled="false">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Variáveis Definidas Pelo Usuário" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="usuario" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
                <stringProp name="Argument.value">${codigo11}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">usuario</stringProp>
              </elementProp>
              <elementProp name="senha" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
                <stringProp name="Argument.value">${senha11}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">senha</stringProp>
              </elementProp>
              <elementProp name="cpf" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
                <stringProp name="Argument.value">${documento}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">cpf</stringProp>
              </elementProp>
              <elementProp name="score" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
                <stringProp name="Argument.value">S</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">score</stringProp>
              </elementProp>
              <elementProp name="extraAcoes" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
                <stringProp name="Argument.value">S</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">extraAcoes</stringProp>
              </elementProp>
              <elementProp name="infEleitoral" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
                <stringProp name="Argument.value">S</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">infEleitoral</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${host}</stringProp>
          <stringProp name="HTTPSampler.port">${port}</stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">FamiliaConsumerXml/bv/pessoal/gold</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResultSaver guiclass="ResultSaverGui" testclass="ResultSaver" testname="Salvar" enabled="true">
            <stringProp name="FileSaver.filename">${path}\\familia_consumer\\bv_pessoal_gold_${documento}.xml</stringProp>
            <boolProp name="FileSaver.errorsonly">false</boolProp>
            <boolProp name="FileSaver.skipautonumber">true</boolProp>
            <boolProp name="FileSaver.skipsuffix">true</boolProp>
            <boolProp name="FileSaver.successonly">true</boolProp>
          </ResultSaver>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="BV Pessoal Gold 2.0 - ${documento}" enabled="false">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Variáveis Definidas Pelo Usuário" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="usuario" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
                <stringProp name="Argument.value">${codigo11}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">usuario</stringProp>
              </elementProp>
              <elementProp name="senha" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
                <stringProp name="Argument.value">${senha11}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">senha</stringProp>
              </elementProp>
              <elementProp name="cpf" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
                <stringProp name="Argument.value">${documento}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">cpf</stringProp>
              </elementProp>
              <elementProp name="score" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
                <stringProp name="Argument.value">S</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">score</stringProp>
              </elementProp>
              <elementProp name="extraAcoes" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
                <stringProp name="Argument.value">S</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">extraAcoes</stringProp>
              </elementProp>
              <elementProp name="infEleitoral" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
                <stringProp name="Argument.value">S</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">infEleitoral</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${host}</stringProp>
          <stringProp name="HTTPSampler.port">${port}</stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">FamiliaConsumerXml/bv/pessoal/gold/2.0</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResultSaver guiclass="ResultSaverGui" testclass="ResultSaver" testname="Salvar" enabled="true">
            <stringProp name="FileSaver.filename">${path}\\familia_consumer\\bv_pessoal_gold_2.0_${documento}.xml</stringProp>
            <boolProp name="FileSaver.errorsonly">false</boolProp>
            <boolProp name="FileSaver.skipautonumber">true</boolProp>
            <boolProp name="FileSaver.skipsuffix">true</boolProp>
            <boolProp name="FileSaver.successonly">true</boolProp>
          </ResultSaver>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="BV Pessoal Gold 2.1 - ${documento}" enabled="false">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Variáveis Definidas Pelo Usuário" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="usuario" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
                <stringProp name="Argument.value">${codigo11}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">usuario</stringProp>
              </elementProp>
              <elementProp name="senha" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
                <stringProp name="Argument.value">${senha11}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">senha</stringProp>
              </elementProp>
              <elementProp name="cpf" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
                <stringProp name="Argument.value">${documento}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">cpf</stringProp>
              </elementProp>
              <elementProp name="score" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
                <stringProp name="Argument.value">S</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">score</stringProp>
              </elementProp>
              <elementProp name="extraAcoes" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
                <stringProp name="Argument.value">S</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">extraAcoes</stringProp>
              </elementProp>
              <elementProp name="infEleitoral" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
                <stringProp name="Argument.value">S</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">infEleitoral</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${host}</stringProp>
          <stringProp name="HTTPSampler.port">${port}</stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">FamiliaConsumerXml/bv/pessoal/gold/2.1</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResultSaver guiclass="ResultSaverGui" testclass="ResultSaver" testname="Salvar" enabled="true">
            <stringProp name="FileSaver.filename">${path}\\familia_consumer\\bv_pessoal_gold_2.1_${documento}.xml</stringProp>
            <boolProp name="FileSaver.errorsonly">false</boolProp>
            <boolProp name="FileSaver.skipautonumber">true</boolProp>
            <boolProp name="FileSaver.skipsuffix">true</boolProp>
            <boolProp name="FileSaver.successonly">true</boolProp>
          </ResultSaver>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="BVS Pessoal Gold 4.0 - ${documento}" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Variáveis Definidas Pelo Usuário" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="usuario" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
                <stringProp name="Argument.value">${codigo8}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">usuario</stringProp>
              </elementProp>
              <elementProp name="senha" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
                <stringProp name="Argument.value">${senha8}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">senha</stringProp>
              </elementProp>
              <elementProp name="cpf" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
                <stringProp name="Argument.value">${documento}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">cpf</stringProp>
              </elementProp>
              <elementProp name="mdScore" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
                <stringProp name="Argument.value">09</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">mdScore</stringProp>
              </elementProp>
              <elementProp name="extraAcoes" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
                <stringProp name="Argument.value">S</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">extraAcoes</stringProp>
              </elementProp>
              <elementProp name="infEleitoral" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
                <stringProp name="Argument.value">S</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">infEleitoral</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${host}</stringProp>
          <stringProp name="HTTPSampler.port">${port}</stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">FamiliaConsumerXmlBv/bvs/pessoal/gold/4.0</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResultSaver guiclass="ResultSaverGui" testclass="ResultSaver" testname="Salvar" enabled="true">
            <stringProp name="FileSaver.filename">${path}\\familia_consumer\\bvs_pessoal_gold_4.0_${documento}.xml</stringProp>
            <boolProp name="FileSaver.errorsonly">false</boolProp>
            <boolProp name="FileSaver.skipautonumber">true</boolProp>
            <boolProp name="FileSaver.skipsuffix">true</boolProp>
            <boolProp name="FileSaver.successonly">true</boolProp>
          </ResultSaver>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Pessoal Completo - ${documento}" enabled="false">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Variáveis Definidas Pelo Usuário" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="usuario" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
                <stringProp name="Argument.value">${codigo11}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">usuario</stringProp>
              </elementProp>
              <elementProp name="senha" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
                <stringProp name="Argument.value">${senha11}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">senha</stringProp>
              </elementProp>
              <elementProp name="cpf" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
                <stringProp name="Argument.value">${documento}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">cpf</stringProp>
              </elementProp>
              <elementProp name="score" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
                <stringProp name="Argument.value">S</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">score</stringProp>
              </elementProp>
              <elementProp name="extraAcoes" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
                <stringProp name="Argument.value">S</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">extraAcoes</stringProp>
              </elementProp>
              <elementProp name="extraConsultas" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
                <stringProp name="Argument.value">S</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">extraConsultas</stringProp>
              </elementProp>
              <elementProp name="infEleitoral" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
                <stringProp name="Argument.value">S</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">infEleitoral</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${host}</stringProp>
          <stringProp name="HTTPSampler.port">${port}</stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">FamiliaConsumerXml/pessoal/completo</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResultSaver guiclass="ResultSaverGui" testclass="ResultSaver" testname="Salvar" enabled="true">
            <stringProp name="FileSaver.filename">${path}\\familia_consumer\\pessoal_completo_${documento}.xml</stringProp>
            <boolProp name="FileSaver.errorsonly">false</boolProp>
            <boolProp name="FileSaver.skipautonumber">true</boolProp>
            <boolProp name="FileSaver.skipsuffix">true</boolProp>
            <boolProp name="FileSaver.successonly">true</boolProp>
          </ResultSaver>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Pessoal Plus - ${documento}" enabled="false">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Variáveis Definidas Pelo Usuário" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="usuario" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
                <stringProp name="Argument.value">${codigo11}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">usuario</stringProp>
              </elementProp>
              <elementProp name="senha" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
                <stringProp name="Argument.value">${senha11}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">senha</stringProp>
              </elementProp>
              <elementProp name="cpf" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
                <stringProp name="Argument.value">${documento}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">cpf</stringProp>
              </elementProp>
              <elementProp name="score" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
                <stringProp name="Argument.value">S</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">score</stringProp>
              </elementProp>
              <elementProp name="extraConsultas" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
                <stringProp name="Argument.value">S</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">extraConsultas</stringProp>
              </elementProp>
              <elementProp name="infEleitoral" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
                <stringProp name="Argument.value">S</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">infEleitoral</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${host}</stringProp>
          <stringProp name="HTTPSampler.port">${port}</stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">FamiliaConsumerXml/pessoal/plus</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResultSaver guiclass="ResultSaverGui" testclass="ResultSaver" testname="Salvar" enabled="true">
            <stringProp name="FileSaver.filename">${path}\\familia_consumer\\pessoal_plus_${documento}.xml</stringProp>
            <boolProp name="FileSaver.errorsonly">false</boolProp>
            <boolProp name="FileSaver.skipautonumber">true</boolProp>
            <boolProp name="FileSaver.skipsuffix">true</boolProp>
            <boolProp name="FileSaver.successonly">true</boolProp>
          </ResultSaver>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Pessoal Sintetico - ${documento}" enabled="false">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Variáveis Definidas Pelo Usuário" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="usuario" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
                <stringProp name="Argument.value">${codigo11}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">usuario</stringProp>
              </elementProp>
              <elementProp name="senha" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
                <stringProp name="Argument.value">${senha11}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">senha</stringProp>
              </elementProp>
              <elementProp name="cpf" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
                <stringProp name="Argument.value">${documento}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">cpf</stringProp>
              </elementProp>
              <elementProp name="score" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
                <stringProp name="Argument.value">S</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">score</stringProp>
              </elementProp>
              <elementProp name="extraConsultas" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
                <stringProp name="Argument.value">S</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">extraConsultas</stringProp>
              </elementProp>
              <elementProp name="infEleitoral" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
                <stringProp name="Argument.value">S</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">infEleitoral</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${host}</stringProp>
          <stringProp name="HTTPSampler.port">${port}</stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">FamiliaConsumerXml/pessoal/sintetico</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResultSaver guiclass="ResultSaverGui" testclass="ResultSaver" testname="Salvar" enabled="true">
            <stringProp name="FileSaver.filename">${path}\\familia_consumer\\pessoal_sintetico_${documento}.xml</stringProp>
            <boolProp name="FileSaver.errorsonly">false</boolProp>
            <boolProp name="FileSaver.skipautonumber">true</boolProp>
            <boolProp name="FileSaver.skipsuffix">true</boolProp>
            <boolProp name="FileSaver.successonly">true</boolProp>
          </ResultSaver>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Pessoal - ${documento}" enabled="false">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Variáveis Definidas Pelo Usuário" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="usuario" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
                <stringProp name="Argument.value">${codigo11}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">usuario</stringProp>
              </elementProp>
              <elementProp name="senha" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
                <stringProp name="Argument.value">${senha11}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">senha</stringProp>
              </elementProp>
              <elementProp name="cpf" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
                <stringProp name="Argument.value">${documento}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">cpf</stringProp>
              </elementProp>
              <elementProp name="score" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
                <stringProp name="Argument.value">S</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">score</stringProp>
              </elementProp>
              <elementProp name="extraAcoes" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
                <stringProp name="Argument.value">S</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">extraAcoes</stringProp>
              </elementProp>
              <elementProp name="extraConsultas" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
                <stringProp name="Argument.value">S</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">extraConsultas</stringProp>
              </elementProp>
              <elementProp name="infEleitoral" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
                <stringProp name="Argument.value">S</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">infEleitoral</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${host}</stringProp>
          <stringProp name="HTTPSampler.port">${port}</stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">FamiliaConsumerXml/pessoal</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResultSaver guiclass="ResultSaverGui" testclass="ResultSaver" testname="Salvar" enabled="true">
            <stringProp name="FileSaver.filename">${path}\\familia_consumer\\pessoal_${documento}.xml</stringProp>
            <boolProp name="FileSaver.errorsonly">false</boolProp>
            <boolProp name="FileSaver.skipautonumber">true</boolProp>
            <boolProp name="FileSaver.skipsuffix">true</boolProp>
            <boolProp name="FileSaver.successonly">true</boolProp>
          </ResultSaver>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="EFX11 - ${documento}" enabled="false">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Variáveis Definidas Pelo Usuário" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="codigoCliente" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
                <stringProp name="Argument.value">${codigo11}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">codigoCliente</stringProp>
              </elementProp>
              <elementProp name="senha" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
                <stringProp name="Argument.value">${senha11}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">senha</stringProp>
              </elementProp>
              <elementProp name="layout" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
                <stringProp name="Argument.value">EFX11</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">layout</stringProp>
              </elementProp>
              <elementProp name="stringConsulta" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
                <stringProp name="Argument.value">&lt;?xml version=&apos;1.0&apos; encoding=&apos;ISO-8859-1&apos;?&gt;&lt;EFX11&gt;&lt;header&gt;&lt;tipoLayout&gt;EFX11&lt;/tipoLayout&gt;&lt;numeroDocumento&gt;${documento}&lt;/numeroDocumento&gt;&lt;tipoDocumento&gt;2&lt;/tipoDocumento&gt;&lt;identificacao&gt;10&lt;/identificacao&gt;&lt;dadosCadastrais&gt;S&lt;/dadosCadastrais&gt;&lt;localizacao&gt;S&lt;/localizacao&gt;&lt;infoEleitoral&gt;S&lt;/infoEleitoral&gt;&lt;participacoesEmpresas&gt;S&lt;/participacoesEmpresas&gt;&lt;consultasCPF&gt;S&lt;/consultasCPF&gt;&lt;consultasCheques&gt;S&lt;/consultasCheques&gt;&lt;titulosVencidosNaoPagos&gt;S&lt;/titulosVencidosNaoPagos&gt;&lt;chequesSemFundos&gt;S&lt;/chequesSemFundos&gt;&lt;protestos&gt;S&lt;/protestos&gt;&lt;participacaoFalencias&gt;S&lt;/participacaoFalencias&gt;&lt;informacoesComplementares&gt;S&lt;/informacoesComplementares&gt;&lt;scoreConsumer&gt;S&lt;/scoreConsumer&gt;&lt;/header&gt;&lt;/EFX11&gt;</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">stringConsulta</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${host}</stringProp>
          <stringProp name="HTTPSampler.port">${port}</stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">EFX11Web/ConectarHttps</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResultSaver guiclass="ResultSaverGui" testclass="ResultSaver" testname="Salvar" enabled="true">
            <stringProp name="FileSaver.filename">${path}\\familia_consumer\\EFX11_${documento}.xml</stringProp>
            <boolProp name="FileSaver.errorsonly">false</boolProp>
            <boolProp name="FileSaver.skipautonumber">true</boolProp>
            <boolProp name="FileSaver.skipsuffix">true</boolProp>
            <boolProp name="FileSaver.successonly">true</boolProp>
          </ResultSaver>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="EFX12 - ${documento}" enabled="false">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Variáveis Definidas Pelo Usuário" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="codigoCliente" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
                <stringProp name="Argument.value">${codigo11}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">codigoCliente</stringProp>
              </elementProp>
              <elementProp name="senha" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
                <stringProp name="Argument.value">${senha11}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">senha</stringProp>
              </elementProp>
              <elementProp name="layout" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
                <stringProp name="Argument.value">EFX12</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">layout</stringProp>
              </elementProp>
              <elementProp name="stringConsulta" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
                <stringProp name="Argument.value">&lt;?xml version=&apos;1.0&apos; encoding=&apos;ISO-8859-1&apos;?&gt;&lt;EFX12&gt;&lt;header&gt;&lt;tipoLayout&gt;EFX12&lt;/tipoLayout&gt;&lt;numeroDocumento&gt;${documento}&lt;/numeroDocumento&gt;&lt;tipoDocumento&gt;2&lt;/tipoDocumento&gt;&lt;identificacao&gt;10&lt;/identificacao&gt;&lt;dadosCadastrais&gt;S&lt;/dadosCadastrais&gt;&lt;participacoesEmpresas&gt;S&lt;/participacoesEmpresas&gt;&lt;infoEleitoral&gt;S&lt;/infoEleitoral&gt;&lt;consultasCpf&gt;S&lt;/consultasCpf&gt;&lt;titulosVencidosNaoPagos&gt;S&lt;/titulosVencidosNaoPagos&gt;&lt;chequesSemFundos&gt;S&lt;/chequesSemFundos&gt;&lt;protestos&gt;S&lt;/protestos&gt;&lt;participacaoFalencias&gt;S&lt;/participacaoFalencias&gt;&lt;scoreConsumer&gt;S&lt;/scoreConsumer&gt;&lt;/header&gt;&lt;/EFX12&gt;</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">stringConsulta</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${host}</stringProp>
          <stringProp name="HTTPSampler.port">${port}</stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">EFX12Web/ConsultaEFX12Servlet</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResultSaver guiclass="ResultSaverGui" testclass="ResultSaver" testname="Salvar" enabled="true">
            <stringProp name="FileSaver.filename">${path}\\familia_consumer\\EFX12_${documento}.xml</stringProp>
            <boolProp name="FileSaver.errorsonly">false</boolProp>
            <boolProp name="FileSaver.skipautonumber">true</boolProp>
            <boolProp name="FileSaver.skipsuffix">true</boolProp>
            <boolProp name="FileSaver.successonly">true</boolProp>
          </ResultSaver>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="EFX12 Cad - ${documento}" enabled="false">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Variáveis Definidas Pelo Usuário" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="codigoCliente" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
                <stringProp name="Argument.value">${codigo11}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">codigoCliente</stringProp>
              </elementProp>
              <elementProp name="senha" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
                <stringProp name="Argument.value">${senha11}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">senha</stringProp>
              </elementProp>
              <elementProp name="layout" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
                <stringProp name="Argument.value">EFX12CAD</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">layout</stringProp>
              </elementProp>
              <elementProp name="stringConsulta" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
                <stringProp name="Argument.value">&lt;?xml version=&apos;1.0&apos; encoding=&apos;ISO-8859-1&apos;?&gt;&lt;EFX12CAD&gt;&lt;header&gt;&lt;tipoLayout&gt;EFX12CAD&lt;/tipoLayout&gt;&lt;numeroDocumento&gt;${documento}&lt;/numeroDocumento&gt;&lt;tipoDocumento&gt;2&lt;/tipoDocumento&gt;&lt;identificacao&gt;10&lt;/identificacao&gt;&lt;dadosCadastrais&gt;S&lt;/dadosCadastrais&gt;&lt;/header&gt;&lt;/EFX12CAD&gt;</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">stringConsulta</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${host}</stringProp>
          <stringProp name="HTTPSampler.port">${port}</stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">EFX12Web/ConsultaEFX12CadServlet</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResultSaver guiclass="ResultSaverGui" testclass="ResultSaver" testname="Salvar" enabled="true">
            <stringProp name="FileSaver.filename">${path}\\familia_consumer\\EFX12_Cad_${documento}.xml</stringProp>
            <boolProp name="FileSaver.errorsonly">false</boolProp>
            <boolProp name="FileSaver.skipautonumber">true</boolProp>
            <boolProp name="FileSaver.skipsuffix">true</boolProp>
            <boolProp name="FileSaver.successonly">true</boolProp>
          </ResultSaver>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="EFX13 - ${documento}" enabled="false">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Variáveis Definidas Pelo Usuário" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="codigoCliente" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
                <stringProp name="Argument.value">${codigo11}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">codigoCliente</stringProp>
              </elementProp>
              <elementProp name="senha" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
                <stringProp name="Argument.value">${senha11}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">senha</stringProp>
              </elementProp>
              <elementProp name="stringConsulta" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
                <stringProp name="Argument.value">&lt;?xml version=&apos;1.0&apos; encoding=&apos;ISO-8859-1&apos;?&gt;&lt;EFX13 xsi:schemaLocation=&apos;http://equifax.com.br/efx13/entrada efx13-entrada.xsd&apos; xmlns=&apos;http://equifax.com.br/efx13/entrada&apos; xmlns:xsi=&apos;http://www.w3.org/2001/XMLSchema-instance&apos;&gt;&lt;header&gt;&lt;tipo_layout&gt;EFX13&lt;/tipo_layout&gt;&lt;numero_documento&gt;${documento}&lt;/numero_documento&gt;&lt;tipo_documento&gt;2&lt;/tipo_documento&gt;&lt;identificacao&gt;10&lt;/identificacao&gt;&lt;dados_cadastrais&gt;S&lt;/dados_cadastrais&gt;&lt;localizacao&gt;S&lt;/localizacao&gt;&lt;fraude&gt;S&lt;/fraude&gt;&lt;info_eleitoral&gt;S&lt;/info_eleitoral&gt;&lt;participacoes_empresas&gt;S&lt;/participacoes_empresas&gt;&lt;resumo_consultas_cpf&gt;S&lt;/resumo_consultas_cpf&gt;&lt;detalhe_consultas_cpf&gt;S&lt;/detalhe_consultas_cpf&gt;&lt;consultas_cheques&gt;S&lt;/consultas_cheques&gt;&lt;titulos_vencidos_nao_pagos&gt;S&lt;/titulos_vencidos_nao_pagos&gt;&lt;cheques_sem_fundos&gt;S&lt;/cheques_sem_fundos&gt;&lt;protestos&gt;S&lt;/protestos&gt;&lt;participacao_falencias&gt;S&lt;/participacao_falencias&gt;&lt;resumo_acoes_civeis&gt;S&lt;/resumo_acoes_civeis&gt;&lt;detalhe_acoes_civeis&gt;S&lt;/detalhe_acoes_civeis&gt;&lt;score_consumer&gt;S&lt;/score_consumer&gt;&lt;informacoes_complementares&gt;S&lt;/informacoes_complementares&gt;&lt;/header&gt;&lt;/EFX13&gt;</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">stringConsulta</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${host}</stringProp>
          <stringProp name="HTTPSampler.port">${port}</stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">EFX13Web/ConectarHttps</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResultSaver guiclass="ResultSaverGui" testclass="ResultSaver" testname="Salvar" enabled="true">
            <stringProp name="FileSaver.filename">${path}\\familia_consumer\\EFX13_${documento}.xml</stringProp>
            <boolProp name="FileSaver.errorsonly">false</boolProp>
            <boolProp name="FileSaver.skipautonumber">true</boolProp>
            <boolProp name="FileSaver.skipsuffix">true</boolProp>
            <boolProp name="FileSaver.successonly">true</boolProp>
          </ResultSaver>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Pessoal Master - ${documento}" enabled="false">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Variáveis Definidas Pelo Usuário" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="usuario" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
                <stringProp name="Argument.value">${codigo11}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">usuario</stringProp>
              </elementProp>
              <elementProp name="senha" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
                <stringProp name="Argument.value">${senha11}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">senha</stringProp>
              </elementProp>
              <elementProp name="cpf" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
                <stringProp name="Argument.value">${documento}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">cpf</stringProp>
              </elementProp>
              <elementProp name="identificacao" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
                <stringProp name="Argument.value">S</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">identificacao</stringProp>
              </elementProp>
              <elementProp name="situacaoReceita" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
                <stringProp name="Argument.value">S</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">situacaoReceita</stringProp>
              </elementProp>
              <elementProp name="localizacao" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
                <stringProp name="Argument.value">S</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">localizacao</stringProp>
              </elementProp>
              <elementProp name="outrasGrafias" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
                <stringProp name="Argument.value">S</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">outrasGrafias</stringProp>
              </elementProp>
              <elementProp name="telefonesInformados" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
                <stringProp name="Argument.value">S</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">telefonesInformados</stringProp>
              </elementProp>
              <elementProp name="telefonesVinculadosCPF" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
                <stringProp name="Argument.value">S</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">telefonesVinculadosCPF</stringProp>
              </elementProp>
              <elementProp name="infEleitoral" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
                <stringProp name="Argument.value">S</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">infEleitoral</stringProp>
              </elementProp>
              <elementProp name="fraude" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
                <stringProp name="Argument.value">S</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">fraude</stringProp>
              </elementProp>
              <elementProp name="participacoesEmpresas" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
                <stringProp name="Argument.value">S</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">participacoesEmpresas</stringProp>
              </elementProp>
              <elementProp name="consultasCPF" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
                <stringProp name="Argument.value">S</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">consultasCPF</stringProp>
              </elementProp>
              <elementProp name="registroDebitos" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
                <stringProp name="Argument.value">S</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">registroDebitos</stringProp>
              </elementProp>
              <elementProp name="chequesSemFundos" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
                <stringProp name="Argument.value">S</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">chequesSemFundos</stringProp>
              </elementProp>
              <elementProp name="protestosEstado" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
                <stringProp name="Argument.value">S</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">protestosEstado</stringProp>
              </elementProp>
              <elementProp name="protestosNacional" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
                <stringProp name="Argument.value">S</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">protestosNacional</stringProp>
              </elementProp>
              <elementProp name="participacaoFalencias" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
                <stringProp name="Argument.value">S</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">participacaoFalencias</stringProp>
              </elementProp>
              <elementProp name="acoes" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
                <stringProp name="Argument.value">S</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">acoes</stringProp>
              </elementProp>
              <elementProp name="alertaInfCompl" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
                <stringProp name="Argument.value">S</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">alertaInfCompl</stringProp>
              </elementProp>
              <elementProp name="extraAcoes" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
                <stringProp name="Argument.value">S</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">extraAcoes</stringProp>
              </elementProp>
              <elementProp name="score" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
                <stringProp name="Argument.value">S</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">score</stringProp>
              </elementProp>
              <elementProp name="chequesSustados" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
                <stringProp name="Argument.value">S</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">chequesSustados</stringProp>
              </elementProp>
              <elementProp name="devolucoesUsuarios" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
                <stringProp name="Argument.value">S</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">devolucoesUsuarios</stringProp>
              </elementProp>
              <elementProp name="rendaPresumida" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
                <stringProp name="Argument.value">S</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">rendaPresumida</stringProp>
              </elementProp>
              <elementProp name="chequesDetalhamento" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
                <stringProp name="Argument.value">S</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">chequesDetalhamento</stringProp>
              </elementProp>
              <elementProp name="modScore" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
                <stringProp name="Argument.value">07</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">modScore</stringProp>
              </elementProp>
              <elementProp name="uf" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
                <stringProp name="Argument.value">SP</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">uf</stringProp>
              </elementProp>
              <elementProp name="cmc7" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
                <stringProp name="Argument.value"></stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">cmc7</stringProp>
              </elementProp>
              <elementProp name="banco" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
                <stringProp name="Argument.value">341</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">banco</stringProp>
              </elementProp>
              <elementProp name="agencia" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
                <stringProp name="Argument.value">3456</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">agencia</stringProp>
              </elementProp>
              <elementProp name="contaCorrente" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
                <stringProp name="Argument.value">01234</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">contaCorrente</stringProp>
              </elementProp>
              <elementProp name="contaCorrenteDig" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
                <stringProp name="Argument.value">4</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">contaCorrenteDig</stringProp>
              </elementProp>
              <elementProp name="cheque" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
                <stringProp name="Argument.value">12345678</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">cheque</stringProp>
              </elementProp>
              <elementProp name="chequeDig" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
                <stringProp name="Argument.value">9</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">chequeDig</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${host}</stringProp>
          <stringProp name="HTTPSampler.port">${port}</stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">FamiliaConsumerXml/pessoal/master</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResultSaver guiclass="ResultSaverGui" testclass="ResultSaver" testname="Salvar" enabled="true">
            <stringProp name="FileSaver.filename">${path}\\familia_consumer\\pessoal_master_${documento}.xml</stringProp>
            <boolProp name="FileSaver.errorsonly">false</boolProp>
            <boolProp name="FileSaver.skipautonumber">true</boolProp>
            <boolProp name="FileSaver.skipsuffix">true</boolProp>
            <boolProp name="FileSaver.successonly">true</boolProp>
          </ResultSaver>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Pessoal Telecom - ${documento}" enabled="false">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Variáveis Definidas Pelo Usuário" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="usuario" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
                <stringProp name="Argument.value">${codigo11}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">usuario</stringProp>
              </elementProp>
              <elementProp name="senha" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
                <stringProp name="Argument.value">${senha11}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">senha</stringProp>
              </elementProp>
              <elementProp name="cpf" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
                <stringProp name="Argument.value">${documento}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">cpf</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${host}</stringProp>
          <stringProp name="HTTPSampler.port">${port}</stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">FamiliaConsumerXml/pessoal/telecom</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResultSaver guiclass="ResultSaverGui" testclass="ResultSaver" testname="Salvar" enabled="true">
            <stringProp name="FileSaver.filename">${path}\\familia_consumer\\pessoal_telecom_${documento}.xml</stringProp>
            <boolProp name="FileSaver.errorsonly">false</boolProp>
            <boolProp name="FileSaver.skipautonumber">true</boolProp>
            <boolProp name="FileSaver.skipsuffix">true</boolProp>
            <boolProp name="FileSaver.successonly">true</boolProp>
          </ResultSaver>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="String Pessoal - ${documento}" enabled="false">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Variáveis Definidas Pelo Usuário" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="usuario" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
                <stringProp name="Argument.value">${codigo11}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">usuario</stringProp>
              </elementProp>
              <elementProp name="senha" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
                <stringProp name="Argument.value">${senha11}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">senha</stringProp>
              </elementProp>
              <elementProp name="cpf" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
                <stringProp name="Argument.value">${documento}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">cpf</stringProp>
              </elementProp>
              <elementProp name="extraAcoes" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
                <stringProp name="Argument.value">S</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">extraAcoes</stringProp>
              </elementProp>
              <elementProp name="consultasCheques" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
                <stringProp name="Argument.value">S</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">consultasCheques</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${host}</stringProp>
          <stringProp name="HTTPSampler.port">${port}</stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">FamiliaConsumerString/pessoal</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResultSaver guiclass="ResultSaverGui" testclass="ResultSaver" testname="Salvar" enabled="true">
            <stringProp name="FileSaver.filename">${path}\\familia_consumer\\pessoal_string_${documento}.txt</stringProp>
            <boolProp name="FileSaver.errorsonly">false</boolProp>
            <boolProp name="FileSaver.skipautonumber">true</boolProp>
            <boolProp name="FileSaver.skipsuffix">true</boolProp>
            <boolProp name="FileSaver.successonly">true</boolProp>
          </ResultSaver>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="String Pessoal Cadastro - ${documento}" enabled="false">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Variáveis Definidas Pelo Usuário" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="usuario" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
                <stringProp name="Argument.value">${codigo11}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">usuario</stringProp>
              </elementProp>
              <elementProp name="senha" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
                <stringProp name="Argument.value">${senha11}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">senha</stringProp>
              </elementProp>
              <elementProp name="cpf" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
                <stringProp name="Argument.value">${documento}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">cpf</stringProp>
              </elementProp>
              <elementProp name="extraAcoes" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
                <stringProp name="Argument.value">S</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">extraAcoes</stringProp>
              </elementProp>
              <elementProp name="consultasCheques" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
                <stringProp name="Argument.value">S</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">consultasCheques</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${host}</stringProp>
          <stringProp name="HTTPSampler.port">${port}</stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">FamiliaConsumerString/pessoal/cadastro</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResultSaver guiclass="ResultSaverGui" testclass="ResultSaver" testname="Salvar" enabled="true">
            <stringProp name="FileSaver.filename">${path}\\familia_consumer\\pessoal_cadastro_string_${documento}.txt</stringProp>
            <boolProp name="FileSaver.errorsonly">false</boolProp>
            <boolProp name="FileSaver.skipautonumber">true</boolProp>
            <boolProp name="FileSaver.skipsuffix">true</boolProp>
            <boolProp name="FileSaver.successonly">true</boolProp>
          </ResultSaver>
          <hashTree/>
        </hashTree>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="Familia Consumer XML Sicoob" enabled="false">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Controlador de Iteração" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <intProp name="LoopController.loops">-1</intProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <longProp name="ThreadGroup.start_time">1537816921000</longProp>
        <longProp name="ThreadGroup.end_time">1537816921000</longProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
      </ThreadGroup>
      <hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Pessoal Gold Sicoob - ${documento}" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Variáveis Definidas Pelo Usuário" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="usuario" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
                <stringProp name="Argument.value">${codigoSicoob}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">usuario</stringProp>
              </elementProp>
              <elementProp name="senha" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
                <stringProp name="Argument.value">${senhaSicoob}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">senha</stringProp>
              </elementProp>
              <elementProp name="cpf" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
                <stringProp name="Argument.value">${documento}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">cpf</stringProp>
              </elementProp>
              <elementProp name="score" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
                <stringProp name="Argument.value">S</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">score</stringProp>
              </elementProp>
              <elementProp name="extraAcoes" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
                <stringProp name="Argument.value">S</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">extraAcoes</stringProp>
              </elementProp>
              <elementProp name="infEleitoral" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
                <stringProp name="Argument.value">S</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">infEleitoral</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${host}</stringProp>
          <stringProp name="HTTPSampler.port">${port}</stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">FamiliaConsumerXmlBv/bv/pessoal/gold/sicoob</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResultSaver guiclass="ResultSaverGui" testclass="ResultSaver" testname="Salvar" enabled="true">
            <stringProp name="FileSaver.filename">${path}\\familia_consumer\\pessoal_gold_sicoob_${documento}.xml</stringProp>
            <boolProp name="FileSaver.errorsonly">false</boolProp>
            <boolProp name="FileSaver.skipautonumber">true</boolProp>
            <boolProp name="FileSaver.skipsuffix">true</boolProp>
            <boolProp name="FileSaver.successonly">true</boolProp>
          </ResultSaver>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Pessoal Completo Sicoob - ${documento}" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Variáveis Definidas Pelo Usuário" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="usuario" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
                <stringProp name="Argument.value">${codigoSicoob}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">usuario</stringProp>
              </elementProp>
              <elementProp name="senha" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
                <stringProp name="Argument.value">${senhaSicoob}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">senha</stringProp>
              </elementProp>
              <elementProp name="cpf" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
                <stringProp name="Argument.value">${documento}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">cpf</stringProp>
              </elementProp>
              <elementProp name="score" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
                <stringProp name="Argument.value">S</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">score</stringProp>
              </elementProp>
              <elementProp name="extraAcoes" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
                <stringProp name="Argument.value">S</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">extraAcoes</stringProp>
              </elementProp>
              <elementProp name="infEleitoral" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
                <stringProp name="Argument.value">S</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">infEleitoral</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${host}</stringProp>
          <stringProp name="HTTPSampler.port">${port}</stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">FamiliaConsumerXmlBv/pessoal/completo/sicoob</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResultSaver guiclass="ResultSaverGui" testclass="ResultSaver" testname="Salvar" enabled="true">
            <stringProp name="FileSaver.filename">${path}\\familia_consumer\\pessoal_completo_sicoob_${documento}.xml</stringProp>
            <boolProp name="FileSaver.errorsonly">false</boolProp>
            <boolProp name="FileSaver.skipautonumber">true</boolProp>
            <boolProp name="FileSaver.skipsuffix">true</boolProp>
            <boolProp name="FileSaver.successonly">true</boolProp>
          </ResultSaver>
          <hashTree/>
        </hashTree>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="Modular PF" enabled="false">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Controlador de Iteração" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <intProp name="LoopController.loops">-1</intProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <longProp name="ThreadGroup.start_time">1537884390000</longProp>
        <longProp name="ThreadGroup.end_time">1537884390000</longProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
      </ThreadGroup>
      <hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Modular PF Cadastral" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot; standalone=&quot;yes&quot;?&gt;&#xd;
&lt;modularPfContratoEntrada&gt;&#xd;
	&lt;usuario&gt;${codigo8}&lt;/usuario&gt;&#xd;
	&lt;senha&gt;${senha8}&lt;/senha&gt;&#xd;
	&lt;cpf&gt;${documento}&lt;/cpf&gt;&#xd;
	&lt;blocos&gt;&#xd;
		&lt;bloco&gt;identificacaoCompleta&lt;/bloco&gt;&#xd;
		&lt;bloco&gt;situacaoReceita&lt;/bloco&gt;&#xd;
		&lt;bloco&gt;situacaoEleitoral&lt;/bloco&gt;&#xd;
		&lt;bloco&gt;outrasGrafias&lt;/bloco&gt;&#xd;
		&lt;bloco&gt;melhorTelefone&lt;/bloco&gt;&#xd;
		&lt;bloco&gt;outrosTelefones&lt;/bloco&gt;&#xd;
		&lt;bloco&gt;melhorEndereco&lt;/bloco&gt;&#xd;
		&lt;bloco&gt;outrosEnderecos&lt;/bloco&gt;&#xd;
	&lt;/blocos&gt;&#xd;
	&lt;tipoCredito&gt;CC&lt;/tipoCredito&gt;&#xd;
&lt;/modularPfContratoEntrada&gt;&#xd;
</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${host}</stringProp>
          <stringProp name="HTTPSampler.port">${port}</stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">ModularPFXmlWeb/servicos/cadastral</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResultSaver guiclass="ResultSaverGui" testclass="ResultSaver" testname="Salvar" enabled="true">
            <stringProp name="FileSaver.filename">${path}\\modular_pf\\cadastral_${documento}.xml</stringProp>
            <boolProp name="FileSaver.errorsonly">false</boolProp>
            <boolProp name="FileSaver.skipautonumber">true</boolProp>
            <boolProp name="FileSaver.skipsuffix">true</boolProp>
            <boolProp name="FileSaver.successonly">true</boolProp>
          </ResultSaver>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Modular PF Basico" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot; standalone=&quot;yes&quot;?&gt;&#xd;
&lt;modularPfContratoEntrada&gt;&#xd;
	&lt;usuario&gt;${codigo8}&lt;/usuario&gt;&#xd;
	&lt;senha&gt;${senha8}&lt;/senha&gt;&#xd;
	&lt;cpf&gt;${documento}&lt;/cpf&gt;&#xd;
	&lt;blocos&gt;&#xd;
		&lt;bloco&gt;identificacaoCompleta&lt;/bloco&gt;&#xd;
		&lt;bloco&gt;situacaoReceita&lt;/bloco&gt;&#xd;
		&lt;bloco&gt;situacaoEleitoral&lt;/bloco&gt;&#xd;
		&lt;bloco&gt;outrasGrafias&lt;/bloco&gt;&#xd;
		&lt;bloco&gt;melhorTelefone&lt;/bloco&gt;&#xd;
		&lt;bloco&gt;outrosTelefones&lt;/bloco&gt;&#xd;
		&lt;bloco&gt;melhorEndereco&lt;/bloco&gt;&#xd;
		&lt;bloco&gt;outrosEnderecos&lt;/bloco&gt;&#xd;
	&lt;/blocos&gt;&#xd;
	&lt;tipoCredito&gt;CC&lt;/tipoCredito&gt;&#xd;
	&lt;uf&gt;SP&lt;/uf&gt;&#xd;
	&lt;cmc7&gt;237035340180002295194109408016&lt;/cmc7&gt;&#xd;
&lt;/modularPfContratoEntrada&gt;&#xd;
</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${host}</stringProp>
          <stringProp name="HTTPSampler.port">${port}</stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">ModularPFXmlWeb/servicos/basico</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResultSaver guiclass="ResultSaverGui" testclass="ResultSaver" testname="Salvar" enabled="true">
            <stringProp name="FileSaver.filename">${path}\\modular_pf\\basico_${documento}.xml</stringProp>
            <boolProp name="FileSaver.errorsonly">false</boolProp>
            <boolProp name="FileSaver.skipautonumber">true</boolProp>
            <boolProp name="FileSaver.skipsuffix">true</boolProp>
            <boolProp name="FileSaver.successonly">true</boolProp>
          </ResultSaver>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Modular PF Intermediario" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot; standalone=&quot;yes&quot;?&gt;&#xd;
&lt;modularPfContratoEntrada&gt;&#xd;
	&lt;usuario&gt;${codigo8}&lt;/usuario&gt;&#xd;
	&lt;senha&gt;${senha8}&lt;/senha&gt;&#xd;
	&lt;cpf&gt;${documento}&lt;/cpf&gt;&#xd;
	&lt;blocos&gt;&#xd;
		&lt;bloco&gt;identificacaoCompleta&lt;/bloco&gt;&#xd;
		&lt;bloco&gt;situacaoReceita&lt;/bloco&gt;&#xd;
		&lt;bloco&gt;situacaoEleitoral&lt;/bloco&gt;&#xd;
		&lt;bloco&gt;outrasGrafias&lt;/bloco&gt;&#xd;
		&lt;bloco&gt;melhorTelefone&lt;/bloco&gt;&#xd;
		&lt;bloco&gt;outrosTelefones&lt;/bloco&gt;&#xd;
		&lt;bloco&gt;melhorEndereco&lt;/bloco&gt;&#xd;
		&lt;bloco&gt;outrosEnderecos&lt;/bloco&gt;&#xd;
	&lt;/blocos&gt;&#xd;
	&lt;tipoCredito&gt;CC&lt;/tipoCredito&gt;&#xd;
&lt;/modularPfContratoEntrada&gt;&#xd;
</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${host}</stringProp>
          <stringProp name="HTTPSampler.port">${port}</stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">ModularPFXmlWeb/servicos/intermediario</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResultSaver guiclass="ResultSaverGui" testclass="ResultSaver" testname="Salvar" enabled="true">
            <stringProp name="FileSaver.filename">${path}\\modular_pf\\intermediario_${documento}.xml</stringProp>
            <boolProp name="FileSaver.errorsonly">false</boolProp>
            <boolProp name="FileSaver.skipautonumber">true</boolProp>
            <boolProp name="FileSaver.skipsuffix">true</boolProp>
            <boolProp name="FileSaver.successonly">true</boolProp>
          </ResultSaver>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Modular PF Completo" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot; standalone=&quot;yes&quot;?&gt;&#xd;
&lt;modularPfContratoEntrada&gt;&#xd;
	&lt;usuario&gt;${codigo8}&lt;/usuario&gt;&#xd;
	&lt;senha&gt;${senha8}&lt;/senha&gt;&#xd;
	&lt;cpf&gt;${documento}&lt;/cpf&gt;&#xd;
	&lt;blocos&gt;&#xd;
		&lt;bloco&gt;identificacaoCompleta&lt;/bloco&gt;&#xd;
		&lt;bloco&gt;situacaoReceita&lt;/bloco&gt;&#xd;
		&lt;bloco&gt;situacaoEleitoral&lt;/bloco&gt;&#xd;
		&lt;bloco&gt;outrasGrafias&lt;/bloco&gt;&#xd;
		&lt;bloco&gt;melhorTelefone&lt;/bloco&gt;&#xd;
		&lt;bloco&gt;outrosTelefones&lt;/bloco&gt;&#xd;
		&lt;bloco&gt;melhorEndereco&lt;/bloco&gt;&#xd;
		&lt;bloco&gt;outrosEnderecos&lt;/bloco&gt;&#xd;
	&lt;/blocos&gt;&#xd;
	&lt;tipoCredito&gt;CC&lt;/tipoCredito&gt;&#xd;
	&lt;cmc7&gt;237035340180002295194109408016&lt;/cmc7&gt;&#xd;
&lt;/modularPfContratoEntrada&gt;&#xd;
</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${host}</stringProp>
          <stringProp name="HTTPSampler.port">${port}</stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">ModularPFXmlWeb/servicos/completo</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResultSaver guiclass="ResultSaverGui" testclass="ResultSaver" testname="Salvar" enabled="true">
            <stringProp name="FileSaver.filename">${path}\\modular_pf\\completo_${documento}.xml</stringProp>
            <boolProp name="FileSaver.errorsonly">false</boolProp>
            <boolProp name="FileSaver.skipautonumber">true</boolProp>
            <boolProp name="FileSaver.skipsuffix">true</boolProp>
            <boolProp name="FileSaver.successonly">true</boolProp>
          </ResultSaver>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Modular PF Geral" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot; standalone=&quot;yes&quot;?&gt;&#xd;
&lt;modularPfContratoEntrada&gt;&#xd;
	&lt;usuario&gt;${codigo8}&lt;/usuario&gt;&#xd;
	&lt;senha&gt;${senha8}&lt;/senha&gt;&#xd;
	&lt;cpf&gt;${documento}&lt;/cpf&gt;&#xd;
	&lt;blocos&gt;&#xd;
		&lt;bloco&gt;identificacaoCompleta&lt;/bloco&gt;&#xd;
		&lt;bloco&gt;situacaoReceita&lt;/bloco&gt;&#xd;
		&lt;bloco&gt;situacaoEleitoral&lt;/bloco&gt;&#xd;
		&lt;bloco&gt;outrasGrafias&lt;/bloco&gt;&#xd;
		&lt;bloco&gt;melhorTelefone&lt;/bloco&gt;&#xd;
		&lt;bloco&gt;outrosTelefones&lt;/bloco&gt;&#xd;
		&lt;bloco&gt;melhorEndereco&lt;/bloco&gt;&#xd;
		&lt;bloco&gt;outrosEnderecos&lt;/bloco&gt;&#xd;
	&lt;/blocos&gt;&#xd;
	&lt;tipoCredito&gt;CC&lt;/tipoCredito&gt;&#xd;
&lt;/modularPfContratoEntrada&gt;&#xd;
</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${host}</stringProp>
          <stringProp name="HTTPSampler.port">${port}</stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">ModularPFXmlWeb/servicos/geral</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResultSaver guiclass="ResultSaverGui" testclass="ResultSaver" testname="Salvar" enabled="true">
            <stringProp name="FileSaver.filename">${path}\\modular_pf\\geral_${documento}.xml</stringProp>
            <boolProp name="FileSaver.errorsonly">false</boolProp>
            <boolProp name="FileSaver.skipautonumber">true</boolProp>
            <boolProp name="FileSaver.skipsuffix">true</boolProp>
            <boolProp name="FileSaver.successonly">true</boolProp>
          </ResultSaver>
          <hashTree/>
        </hashTree>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="Modular PF 2.0" enabled="false">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Controlador de Iteração" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <intProp name="LoopController.loops">-1</intProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <longProp name="ThreadGroup.start_time">1537884390000</longProp>
        <longProp name="ThreadGroup.end_time">1537884390000</longProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
      </ThreadGroup>
      <hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Modular PF Cadastral 2.0" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot; standalone=&quot;yes&quot;?&gt;&#xd;
&lt;modularPfContratoEntrada&gt;&#xd;
	&lt;usuario&gt;${codigo8}&lt;/usuario&gt;&#xd;
	&lt;senha&gt;${senha8}&lt;/senha&gt;&#xd;
	&lt;cpf&gt;${documento}&lt;/cpf&gt;&#xd;
	&lt;blocos&gt;&#xd;
		&lt;bloco&gt;identificacaoCompleta&lt;/bloco&gt;&#xd;
		&lt;bloco&gt;identificacaoResumida&lt;/bloco&gt;&#xd;
		&lt;bloco&gt;situacaoReceita&lt;/bloco&gt;&#xd;
		&lt;bloco&gt;situacaoEleitoral&lt;/bloco&gt;&#xd;
		&lt;bloco&gt;outrasGrafias&lt;/bloco&gt;&#xd;
		&lt;bloco&gt;melhorTelefone&lt;/bloco&gt;&#xd;
		&lt;bloco&gt;outrosTelefones&lt;/bloco&gt;&#xd;
		&lt;bloco&gt;melhorEndereco&lt;/bloco&gt;&#xd;
		&lt;bloco&gt;outrosEnderecos&lt;/bloco&gt;&#xd;
	&lt;/blocos&gt;&#xd;
	&lt;tipoCredito&gt;CC&lt;/tipoCredito&gt;&#xd;
&lt;/modularPfContratoEntrada&gt;&#xd;
</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${host}</stringProp>
          <stringProp name="HTTPSampler.port">${port}</stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">ModularPFXmlWeb/servicos/cadastral/2.0</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResultSaver guiclass="ResultSaverGui" testclass="ResultSaver" testname="Salvar" enabled="true">
            <stringProp name="FileSaver.filename">${path}\\modular_pf\\cadastral 2.0_${documento}.xml</stringProp>
            <boolProp name="FileSaver.errorsonly">false</boolProp>
            <boolProp name="FileSaver.skipautonumber">true</boolProp>
            <boolProp name="FileSaver.skipsuffix">true</boolProp>
            <boolProp name="FileSaver.successonly">true</boolProp>
          </ResultSaver>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Modular PF Basico 2.0" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot; standalone=&quot;yes&quot;?&gt;&#xd;
&lt;modularPfContratoEntrada&gt;&#xd;
	&lt;usuario&gt;${codigo8}&lt;/usuario&gt;&#xd;
	&lt;senha&gt;${senha8}&lt;/senha&gt;&#xd;
	&lt;cpf&gt;${documento}&lt;/cpf&gt;&#xd;
	&lt;blocos&gt;&#xd;
		&lt;bloco&gt;identificacaoCompleta&lt;/bloco&gt;&#xd;
		&lt;bloco&gt;identificacaoResumida&lt;/bloco&gt;&#xd;
		&lt;bloco&gt;situacaoReceita&lt;/bloco&gt;&#xd;
		&lt;bloco&gt;situacaoEleitoral&lt;/bloco&gt;&#xd;
		&lt;bloco&gt;outrasGrafias&lt;/bloco&gt;&#xd;
		&lt;bloco&gt;melhorTelefone&lt;/bloco&gt;&#xd;
		&lt;bloco&gt;outrosTelefones&lt;/bloco&gt;&#xd;
		&lt;bloco&gt;melhorEndereco&lt;/bloco&gt;&#xd;
		&lt;bloco&gt;outrosEnderecos&lt;/bloco&gt;&#xd;
	&lt;/blocos&gt;&#xd;
	&lt;tipoCredito&gt;CC&lt;/tipoCredito&gt;&#xd;
	&lt;uf&gt;SP&lt;/uf&gt;&#xd;
	&lt;cmc7&gt;237035340180002295194109408016&lt;/cmc7&gt;&#xd;
&lt;/modularPfContratoEntrada&gt;&#xd;
</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${host}</stringProp>
          <stringProp name="HTTPSampler.port">${port}</stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">ModularPFXmlWeb/servicos/basico/2.0</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResultSaver guiclass="ResultSaverGui" testclass="ResultSaver" testname="Salvar" enabled="true">
            <stringProp name="FileSaver.filename">${path}\\modular_pf\\basico 2.0_${documento}.xml</stringProp>
            <boolProp name="FileSaver.errorsonly">false</boolProp>
            <boolProp name="FileSaver.skipautonumber">true</boolProp>
            <boolProp name="FileSaver.skipsuffix">true</boolProp>
            <boolProp name="FileSaver.successonly">true</boolProp>
          </ResultSaver>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Modular PF Intermediario 2.0" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot; standalone=&quot;yes&quot;?&gt;&#xd;
&lt;modularPfContratoEntrada&gt;&#xd;
	&lt;usuario&gt;${codigo8}&lt;/usuario&gt;&#xd;
	&lt;senha&gt;${senha8}&lt;/senha&gt;&#xd;
	&lt;cpf&gt;${documento}&lt;/cpf&gt;&#xd;
	&lt;blocos&gt;&#xd;
		&lt;bloco&gt;identificacaoCompleta&lt;/bloco&gt;&#xd;
		&lt;bloco&gt;identificacaoResumida&lt;/bloco&gt;&#xd;
		&lt;bloco&gt;situacaoReceita&lt;/bloco&gt;&#xd;
		&lt;bloco&gt;situacaoEleitoral&lt;/bloco&gt;&#xd;
		&lt;bloco&gt;outrasGrafias&lt;/bloco&gt;&#xd;
		&lt;bloco&gt;melhorTelefone&lt;/bloco&gt;&#xd;
		&lt;bloco&gt;outrosTelefones&lt;/bloco&gt;&#xd;
		&lt;bloco&gt;melhorEndereco&lt;/bloco&gt;&#xd;
		&lt;bloco&gt;outrosEnderecos&lt;/bloco&gt;&#xd;
	&lt;/blocos&gt;&#xd;
	&lt;tipoCredito&gt;CC&lt;/tipoCredito&gt;&#xd;
&lt;/modularPfContratoEntrada&gt;&#xd;
</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${host}</stringProp>
          <stringProp name="HTTPSampler.port">${port}</stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">ModularPFXmlWeb/servicos/intermediario/2.0</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResultSaver guiclass="ResultSaverGui" testclass="ResultSaver" testname="Salvar" enabled="true">
            <stringProp name="FileSaver.filename">${path}\\modular_pf\\intermediario 2.0_${documento}.xml</stringProp>
            <boolProp name="FileSaver.errorsonly">false</boolProp>
            <boolProp name="FileSaver.skipautonumber">true</boolProp>
            <boolProp name="FileSaver.skipsuffix">true</boolProp>
            <boolProp name="FileSaver.successonly">true</boolProp>
          </ResultSaver>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Modular PF Completo 2.0" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot; standalone=&quot;yes&quot;?&gt;&#xd;
&lt;modularPfContratoEntrada&gt;&#xd;
	&lt;usuario&gt;${codigo8}&lt;/usuario&gt;&#xd;
	&lt;senha&gt;${senha8}&lt;/senha&gt;&#xd;
	&lt;cpf&gt;${documento}&lt;/cpf&gt;&#xd;
	&lt;blocos&gt;&#xd;
		&lt;bloco&gt;identificacaoCompleta&lt;/bloco&gt;&#xd;
		&lt;bloco&gt;identificacaoResumida&lt;/bloco&gt;&#xd;
		&lt;bloco&gt;situacaoReceita&lt;/bloco&gt;&#xd;
		&lt;bloco&gt;situacaoEleitoral&lt;/bloco&gt;&#xd;
		&lt;bloco&gt;outrasGrafias&lt;/bloco&gt;&#xd;
		&lt;bloco&gt;melhorTelefone&lt;/bloco&gt;&#xd;
		&lt;bloco&gt;outrosTelefones&lt;/bloco&gt;&#xd;
		&lt;bloco&gt;melhorEndereco&lt;/bloco&gt;&#xd;
		&lt;bloco&gt;outrosEnderecos&lt;/bloco&gt;&#xd;
	&lt;/blocos&gt;&#xd;
	&lt;tipoCredito&gt;CC&lt;/tipoCredito&gt;&#xd;
	&lt;cmc7&gt;237035340180002295194109408016&lt;/cmc7&gt;&#xd;
&lt;/modularPfContratoEntrada&gt;&#xd;
</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${host}</stringProp>
          <stringProp name="HTTPSampler.port">${port}</stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">ModularPFXmlWeb/servicos/completo/2.0</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResultSaver guiclass="ResultSaverGui" testclass="ResultSaver" testname="Salvar" enabled="true">
            <stringProp name="FileSaver.filename">${path}\\modular_pf\\completo 2.0_${documento}.xml</stringProp>
            <boolProp name="FileSaver.errorsonly">false</boolProp>
            <boolProp name="FileSaver.skipautonumber">true</boolProp>
            <boolProp name="FileSaver.skipsuffix">true</boolProp>
            <boolProp name="FileSaver.successonly">true</boolProp>
          </ResultSaver>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Modular PF Geral 2.0" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot; standalone=&quot;yes&quot;?&gt;&#xd;
&lt;modularPfContratoEntrada&gt;&#xd;
	&lt;usuario&gt;${codigo8}&lt;/usuario&gt;&#xd;
	&lt;senha&gt;${senha8}&lt;/senha&gt;&#xd;
	&lt;cpf&gt;${documento}&lt;/cpf&gt;&#xd;
	&lt;blocos&gt;&#xd;
		&lt;bloco&gt;identificacaoCompleta&lt;/bloco&gt;&#xd;
		&lt;bloco&gt;identificacaoResumida&lt;/bloco&gt;&#xd;
		&lt;bloco&gt;situacaoReceita&lt;/bloco&gt;&#xd;
		&lt;bloco&gt;situacaoEleitoral&lt;/bloco&gt;&#xd;
		&lt;bloco&gt;outrasGrafias&lt;/bloco&gt;&#xd;
		&lt;bloco&gt;melhorTelefone&lt;/bloco&gt;&#xd;
		&lt;bloco&gt;outrosTelefones&lt;/bloco&gt;&#xd;
		&lt;bloco&gt;melhorEndereco&lt;/bloco&gt;&#xd;
		&lt;bloco&gt;outrosEnderecos&lt;/bloco&gt;&#xd;
	&lt;/blocos&gt;&#xd;
	&lt;tipoCredito&gt;CC&lt;/tipoCredito&gt;&#xd;
&lt;/modularPfContratoEntrada&gt;&#xd;
</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${host}</stringProp>
          <stringProp name="HTTPSampler.port">${port}</stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">ModularPFXmlWeb/servicos/geral/2.0</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResultSaver guiclass="ResultSaverGui" testclass="ResultSaver" testname="Salvar" enabled="true">
            <stringProp name="FileSaver.filename">${path}\\modular_pf\\geral 2.0_${documento}.xml</stringProp>
            <boolProp name="FileSaver.errorsonly">false</boolProp>
            <boolProp name="FileSaver.skipautonumber">true</boolProp>
            <boolProp name="FileSaver.skipsuffix">true</boolProp>
            <boolProp name="FileSaver.successonly">true</boolProp>
          </ResultSaver>
          <hashTree/>
        </hashTree>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="Modular PF 3.0" enabled="false">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Controlador de Iteração" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <intProp name="LoopController.loops">-1</intProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <longProp name="ThreadGroup.start_time">1537884390000</longProp>
        <longProp name="ThreadGroup.end_time">1537884390000</longProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
      </ThreadGroup>
      <hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Modular PF Cadastral 3.0" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot; standalone=&quot;yes&quot;?&gt;&#xd;
&lt;modularPfContratoEntrada&gt;&#xd;
	&lt;usuario&gt;${codigo8}&lt;/usuario&gt;&#xd;
	&lt;senha&gt;${senha8}&lt;/senha&gt;&#xd;
	&lt;cpf&gt;${documento}&lt;/cpf&gt;&#xd;
	&lt;blocos&gt;&#xd;
		&lt;bloco&gt;identificacaoCompleta&lt;/bloco&gt;&#xd;
		&lt;bloco&gt;identificacaoResumida&lt;/bloco&gt;&#xd;
		&lt;bloco&gt;situacaoReceita&lt;/bloco&gt;&#xd;
		&lt;bloco&gt;situacaoEleitoral&lt;/bloco&gt;&#xd;
		&lt;bloco&gt;outrasGrafias&lt;/bloco&gt;&#xd;
		&lt;bloco&gt;melhorTelefone&lt;/bloco&gt;&#xd;
		&lt;bloco&gt;outrosTelefones&lt;/bloco&gt;&#xd;
		&lt;bloco&gt;melhorEndereco&lt;/bloco&gt;&#xd;
		&lt;bloco&gt;outrosEnderecos&lt;/bloco&gt;&#xd;
	&lt;/blocos&gt;&#xd;
	&lt;tipoCredito&gt;CC&lt;/tipoCredito&gt;&#xd;
&lt;/modularPfContratoEntrada&gt;&#xd;
</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${host}</stringProp>
          <stringProp name="HTTPSampler.port">${port}</stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">ModularPFXmlWeb/servicos/cadastral/3.0</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResultSaver guiclass="ResultSaverGui" testclass="ResultSaver" testname="Salvar" enabled="true">
            <stringProp name="FileSaver.filename">${path}\\modular_pf\\cadastral 3.0_${documento}.xml</stringProp>
            <boolProp name="FileSaver.errorsonly">false</boolProp>
            <boolProp name="FileSaver.skipautonumber">true</boolProp>
            <boolProp name="FileSaver.skipsuffix">true</boolProp>
            <boolProp name="FileSaver.successonly">true</boolProp>
          </ResultSaver>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Modular PF Basico 3.0" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot; standalone=&quot;yes&quot;?&gt;&#xd;
&lt;modularPfContratoEntrada&gt;&#xd;
	&lt;usuario&gt;${codigo8}&lt;/usuario&gt;&#xd;
	&lt;senha&gt;${senha8}&lt;/senha&gt;&#xd;
	&lt;cpf&gt;${documento}&lt;/cpf&gt;&#xd;
	&lt;blocos&gt;&#xd;
		&lt;bloco&gt;identificacaoCompleta&lt;/bloco&gt;&#xd;
		&lt;bloco&gt;identificacaoResumida&lt;/bloco&gt;&#xd;
		&lt;bloco&gt;situacaoReceita&lt;/bloco&gt;&#xd;
		&lt;bloco&gt;situacaoEleitoral&lt;/bloco&gt;&#xd;
		&lt;bloco&gt;outrasGrafias&lt;/bloco&gt;&#xd;
		&lt;bloco&gt;melhorTelefone&lt;/bloco&gt;&#xd;
		&lt;bloco&gt;outrosTelefones&lt;/bloco&gt;&#xd;
		&lt;bloco&gt;melhorEndereco&lt;/bloco&gt;&#xd;
		&lt;bloco&gt;outrosEnderecos&lt;/bloco&gt;&#xd;
	&lt;/blocos&gt;&#xd;
	&lt;tipoCredito&gt;CC&lt;/tipoCredito&gt;&#xd;
	&lt;uf&gt;SP&lt;/uf&gt;&#xd;
	&lt;cmc7&gt;237035340180002295194109408016&lt;/cmc7&gt;&#xd;
&lt;/modularPfContratoEntrada&gt;&#xd;
</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${host}</stringProp>
          <stringProp name="HTTPSampler.port">${port}</stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">ModularPFXmlWeb/servicos/basico/3.0</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResultSaver guiclass="ResultSaverGui" testclass="ResultSaver" testname="Salvar" enabled="true">
            <stringProp name="FileSaver.filename">${path}\\modular_pf\\basico 3.0_${documento}.xml</stringProp>
            <boolProp name="FileSaver.errorsonly">false</boolProp>
            <boolProp name="FileSaver.skipautonumber">true</boolProp>
            <boolProp name="FileSaver.skipsuffix">true</boolProp>
            <boolProp name="FileSaver.successonly">true</boolProp>
          </ResultSaver>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Modular PF Intermediario 3.0" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot; standalone=&quot;yes&quot;?&gt;&#xd;
&lt;modularPfContratoEntrada&gt;&#xd;
	&lt;usuario&gt;${codigo8}&lt;/usuario&gt;&#xd;
	&lt;senha&gt;${senha8}&lt;/senha&gt;&#xd;
	&lt;cpf&gt;${documento}&lt;/cpf&gt;&#xd;
	&lt;blocos&gt;&#xd;
		&lt;bloco&gt;identificacaoCompleta&lt;/bloco&gt;&#xd;
		&lt;bloco&gt;identificacaoResumida&lt;/bloco&gt;&#xd;
		&lt;bloco&gt;situacaoReceita&lt;/bloco&gt;&#xd;
		&lt;bloco&gt;situacaoEleitoral&lt;/bloco&gt;&#xd;
		&lt;bloco&gt;outrasGrafias&lt;/bloco&gt;&#xd;
		&lt;bloco&gt;melhorTelefone&lt;/bloco&gt;&#xd;
		&lt;bloco&gt;outrosTelefones&lt;/bloco&gt;&#xd;
		&lt;bloco&gt;melhorEndereco&lt;/bloco&gt;&#xd;
		&lt;bloco&gt;outrosEnderecos&lt;/bloco&gt;&#xd;
	&lt;/blocos&gt;&#xd;
	&lt;tipoCredito&gt;CC&lt;/tipoCredito&gt;&#xd;
&lt;/modularPfContratoEntrada&gt;&#xd;
</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${host}</stringProp>
          <stringProp name="HTTPSampler.port">${port}</stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">ModularPFXmlWeb/servicos/intermediario/3.0</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResultSaver guiclass="ResultSaverGui" testclass="ResultSaver" testname="Salvar" enabled="true">
            <stringProp name="FileSaver.filename">${path}\\modular_pf\\intermediario 3.0_${documento}.xml</stringProp>
            <boolProp name="FileSaver.errorsonly">false</boolProp>
            <boolProp name="FileSaver.skipautonumber">true</boolProp>
            <boolProp name="FileSaver.skipsuffix">true</boolProp>
            <boolProp name="FileSaver.successonly">true</boolProp>
          </ResultSaver>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Modular PF Completo 3.0" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot; standalone=&quot;yes&quot;?&gt;&#xd;
&lt;modularPfContratoEntrada&gt;&#xd;
	&lt;usuario&gt;${codigo8}&lt;/usuario&gt;&#xd;
	&lt;senha&gt;${senha8}&lt;/senha&gt;&#xd;
	&lt;cpf&gt;${documento}&lt;/cpf&gt;&#xd;
	&lt;blocos&gt;&#xd;
		&lt;bloco&gt;identificacaoCompleta&lt;/bloco&gt;&#xd;
		&lt;bloco&gt;identificacaoResumida&lt;/bloco&gt;&#xd;
		&lt;bloco&gt;situacaoReceita&lt;/bloco&gt;&#xd;
		&lt;bloco&gt;situacaoEleitoral&lt;/bloco&gt;&#xd;
		&lt;bloco&gt;outrasGrafias&lt;/bloco&gt;&#xd;
		&lt;bloco&gt;melhorTelefone&lt;/bloco&gt;&#xd;
		&lt;bloco&gt;outrosTelefones&lt;/bloco&gt;&#xd;
		&lt;bloco&gt;melhorEndereco&lt;/bloco&gt;&#xd;
		&lt;bloco&gt;outrosEnderecos&lt;/bloco&gt;&#xd;
	&lt;/blocos&gt;&#xd;
	&lt;tipoCredito&gt;CC&lt;/tipoCredito&gt;&#xd;
	&lt;cmc7&gt;237035340180002295194109408016&lt;/cmc7&gt;&#xd;
&lt;/modularPfContratoEntrada&gt;&#xd;
</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${host}</stringProp>
          <stringProp name="HTTPSampler.port">${port}</stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">ModularPFXmlWeb/servicos/completo/3.0</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResultSaver guiclass="ResultSaverGui" testclass="ResultSaver" testname="Salvar" enabled="true">
            <stringProp name="FileSaver.filename">${path}\\modular_pf\\completo 3.0_${documento}.xml</stringProp>
            <boolProp name="FileSaver.errorsonly">false</boolProp>
            <boolProp name="FileSaver.skipautonumber">true</boolProp>
            <boolProp name="FileSaver.skipsuffix">true</boolProp>
            <boolProp name="FileSaver.successonly">true</boolProp>
          </ResultSaver>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Modular PF Geral 3.0" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot; standalone=&quot;yes&quot;?&gt;&#xd;
&lt;modularPfContratoEntrada&gt;&#xd;
	&lt;usuario&gt;${codigo8}&lt;/usuario&gt;&#xd;
	&lt;senha&gt;${senha8}&lt;/senha&gt;&#xd;
	&lt;cpf&gt;${documento}&lt;/cpf&gt;&#xd;
	&lt;blocos&gt;&#xd;
		&lt;bloco&gt;identificacaoCompleta&lt;/bloco&gt;&#xd;
		&lt;bloco&gt;identificacaoResumida&lt;/bloco&gt;&#xd;
		&lt;bloco&gt;situacaoReceita&lt;/bloco&gt;&#xd;
		&lt;bloco&gt;situacaoEleitoral&lt;/bloco&gt;&#xd;
		&lt;bloco&gt;outrasGrafias&lt;/bloco&gt;&#xd;
		&lt;bloco&gt;melhorTelefone&lt;/bloco&gt;&#xd;
		&lt;bloco&gt;outrosTelefones&lt;/bloco&gt;&#xd;
		&lt;bloco&gt;melhorEndereco&lt;/bloco&gt;&#xd;
		&lt;bloco&gt;outrosEnderecos&lt;/bloco&gt;&#xd;
	&lt;/blocos&gt;&#xd;
	&lt;tipoCredito&gt;CC&lt;/tipoCredito&gt;&#xd;
&lt;/modularPfContratoEntrada&gt;&#xd;
</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${host}</stringProp>
          <stringProp name="HTTPSampler.port">${port}</stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">ModularPFXmlWeb/servicos/geral/3.0</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResultSaver guiclass="ResultSaverGui" testclass="ResultSaver" testname="Salvar" enabled="true">
            <stringProp name="FileSaver.filename">${path}\\modular_pf\\geral 3.0_${documento}.xml</stringProp>
            <boolProp name="FileSaver.errorsonly">false</boolProp>
            <boolProp name="FileSaver.skipautonumber">true</boolProp>
            <boolProp name="FileSaver.skipsuffix">true</boolProp>
            <boolProp name="FileSaver.successonly">true</boolProp>
          </ResultSaver>
          <hashTree/>
        </hashTree>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="Modular PF 3.1" enabled="false">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Controlador de Iteração" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <intProp name="LoopController.loops">-1</intProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <longProp name="ThreadGroup.start_time">1537884390000</longProp>
        <longProp name="ThreadGroup.end_time">1537884390000</longProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
      </ThreadGroup>
      <hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Modular PF Cadastral 3.1" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot; standalone=&quot;yes&quot;?&gt;&#xd;
&lt;modularPfContratoEntrada&gt;&#xd;
	&lt;usuario&gt;${codigo8}&lt;/usuario&gt;&#xd;
	&lt;senha&gt;${senha8}&lt;/senha&gt;&#xd;
	&lt;cpf&gt;${documento}&lt;/cpf&gt;&#xd;
	&lt;blocos&gt;&#xd;
		&lt;bloco&gt;identificacaoCompleta&lt;/bloco&gt;&#xd;
		&lt;bloco&gt;identificacaoResumida&lt;/bloco&gt;&#xd;
		&lt;bloco&gt;situacaoReceita&lt;/bloco&gt;&#xd;
		&lt;bloco&gt;situacaoEleitoral&lt;/bloco&gt;&#xd;
		&lt;bloco&gt;outrasGrafias&lt;/bloco&gt;&#xd;
		&lt;bloco&gt;melhorTelefone&lt;/bloco&gt;&#xd;
		&lt;bloco&gt;outrosTelefones&lt;/bloco&gt;&#xd;
		&lt;bloco&gt;melhorEndereco&lt;/bloco&gt;&#xd;
		&lt;bloco&gt;outrosEnderecos&lt;/bloco&gt;&#xd;
	&lt;/blocos&gt;&#xd;
	&lt;tipoCredito&gt;CC&lt;/tipoCredito&gt;&#xd;
&lt;/modularPfContratoEntrada&gt;&#xd;
</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${host}</stringProp>
          <stringProp name="HTTPSampler.port">${port}</stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">ModularPFXmlWeb/servicos/cadastral/3.1</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResultSaver guiclass="ResultSaverGui" testclass="ResultSaver" testname="Salvar" enabled="true">
            <stringProp name="FileSaver.filename">${path}\\modular_pf\\cadastral 3.1_${documento}.xml</stringProp>
            <boolProp name="FileSaver.errorsonly">false</boolProp>
            <boolProp name="FileSaver.skipautonumber">true</boolProp>
            <boolProp name="FileSaver.skipsuffix">true</boolProp>
            <boolProp name="FileSaver.successonly">true</boolProp>
          </ResultSaver>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Modular PF Basico 3.1" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot; standalone=&quot;yes&quot;?&gt;&#xd;
&lt;modularPfContratoEntrada&gt;&#xd;
	&lt;usuario&gt;${codigo8}&lt;/usuario&gt;&#xd;
	&lt;senha&gt;${senha8}&lt;/senha&gt;&#xd;
	&lt;cpf&gt;${documento}&lt;/cpf&gt;&#xd;
	&lt;blocos&gt;&#xd;
		&lt;bloco&gt;identificacaoCompleta&lt;/bloco&gt;&#xd;
		&lt;bloco&gt;identificacaoResumida&lt;/bloco&gt;&#xd;
		&lt;bloco&gt;situacaoReceita&lt;/bloco&gt;&#xd;
		&lt;bloco&gt;situacaoEleitoral&lt;/bloco&gt;&#xd;
		&lt;bloco&gt;outrasGrafias&lt;/bloco&gt;&#xd;
		&lt;bloco&gt;melhorTelefone&lt;/bloco&gt;&#xd;
		&lt;bloco&gt;outrosTelefones&lt;/bloco&gt;&#xd;
		&lt;bloco&gt;melhorEndereco&lt;/bloco&gt;&#xd;
		&lt;bloco&gt;outrosEnderecos&lt;/bloco&gt;&#xd;
	&lt;/blocos&gt;&#xd;
	&lt;tipoCredito&gt;CC&lt;/tipoCredito&gt;&#xd;
	&lt;uf&gt;SP&lt;/uf&gt;&#xd;
	&lt;cmc7&gt;237035340180002295194109408016&lt;/cmc7&gt;&#xd;
&lt;/modularPfContratoEntrada&gt;&#xd;
</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${host}</stringProp>
          <stringProp name="HTTPSampler.port">${port}</stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">ModularPFXmlWeb/servicos/basico/3.1</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResultSaver guiclass="ResultSaverGui" testclass="ResultSaver" testname="Salvar" enabled="true">
            <stringProp name="FileSaver.filename">${path}\\modular_pf\\basico 3.1_${documento}.xml</stringProp>
            <boolProp name="FileSaver.errorsonly">false</boolProp>
            <boolProp name="FileSaver.skipautonumber">true</boolProp>
            <boolProp name="FileSaver.skipsuffix">true</boolProp>
            <boolProp name="FileSaver.successonly">true</boolProp>
          </ResultSaver>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Modular PF Intermediario 3.1" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot; standalone=&quot;yes&quot;?&gt;&#xd;
&lt;modularPfContratoEntrada&gt;&#xd;
	&lt;usuario&gt;${codigo8}&lt;/usuario&gt;&#xd;
	&lt;senha&gt;${senha8}&lt;/senha&gt;&#xd;
	&lt;cpf&gt;${documento}&lt;/cpf&gt;&#xd;
	&lt;blocos&gt;&#xd;
		&lt;bloco&gt;identificacaoCompleta&lt;/bloco&gt;&#xd;
		&lt;bloco&gt;identificacaoResumida&lt;/bloco&gt;&#xd;
		&lt;bloco&gt;situacaoReceita&lt;/bloco&gt;&#xd;
		&lt;bloco&gt;situacaoEleitoral&lt;/bloco&gt;&#xd;
		&lt;bloco&gt;outrasGrafias&lt;/bloco&gt;&#xd;
		&lt;bloco&gt;melhorTelefone&lt;/bloco&gt;&#xd;
		&lt;bloco&gt;outrosTelefones&lt;/bloco&gt;&#xd;
		&lt;bloco&gt;melhorEndereco&lt;/bloco&gt;&#xd;
		&lt;bloco&gt;outrosEnderecos&lt;/bloco&gt;&#xd;
	&lt;/blocos&gt;&#xd;
	&lt;tipoCredito&gt;CC&lt;/tipoCredito&gt;&#xd;
&lt;/modularPfContratoEntrada&gt;&#xd;
</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${host}</stringProp>
          <stringProp name="HTTPSampler.port">${port}</stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">ModularPFXmlWeb/servicos/intermediario/3.1</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResultSaver guiclass="ResultSaverGui" testclass="ResultSaver" testname="Salvar" enabled="true">
            <stringProp name="FileSaver.filename">${path}\\modular_pf\\intermediario 3.1_${documento}.xml</stringProp>
            <boolProp name="FileSaver.errorsonly">false</boolProp>
            <boolProp name="FileSaver.skipautonumber">true</boolProp>
            <boolProp name="FileSaver.skipsuffix">true</boolProp>
            <boolProp name="FileSaver.successonly">true</boolProp>
          </ResultSaver>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Modular PF Completo 3.1" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot; standalone=&quot;yes&quot;?&gt;&#xd;
&lt;modularPfContratoEntrada&gt;&#xd;
	&lt;usuario&gt;${codigo8}&lt;/usuario&gt;&#xd;
	&lt;senha&gt;${senha8}&lt;/senha&gt;&#xd;
	&lt;cpf&gt;${documento}&lt;/cpf&gt;&#xd;
	&lt;blocos&gt;&#xd;
		&lt;bloco&gt;identificacaoCompleta&lt;/bloco&gt;&#xd;
		&lt;bloco&gt;identificacaoResumida&lt;/bloco&gt;&#xd;
		&lt;bloco&gt;situacaoReceita&lt;/bloco&gt;&#xd;
		&lt;bloco&gt;situacaoEleitoral&lt;/bloco&gt;&#xd;
		&lt;bloco&gt;outrasGrafias&lt;/bloco&gt;&#xd;
		&lt;bloco&gt;melhorTelefone&lt;/bloco&gt;&#xd;
		&lt;bloco&gt;outrosTelefones&lt;/bloco&gt;&#xd;
		&lt;bloco&gt;melhorEndereco&lt;/bloco&gt;&#xd;
		&lt;bloco&gt;outrosEnderecos&lt;/bloco&gt;&#xd;
	&lt;/blocos&gt;&#xd;
	&lt;tipoCredito&gt;CC&lt;/tipoCredito&gt;&#xd;
	&lt;cmc7&gt;237035340180002295194109408016&lt;/cmc7&gt;&#xd;
&lt;/modularPfContratoEntrada&gt;&#xd;
</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${host}</stringProp>
          <stringProp name="HTTPSampler.port">${port}</stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">ModularPFXmlWeb/servicos/completo/3.1</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResultSaver guiclass="ResultSaverGui" testclass="ResultSaver" testname="Salvar" enabled="true">
            <stringProp name="FileSaver.filename">${path}\\modular_pf\\completo 3.1_${documento}.xml</stringProp>
            <boolProp name="FileSaver.errorsonly">false</boolProp>
            <boolProp name="FileSaver.skipautonumber">true</boolProp>
            <boolProp name="FileSaver.skipsuffix">true</boolProp>
            <boolProp name="FileSaver.successonly">true</boolProp>
          </ResultSaver>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Modular PF Geral 3.1" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot; standalone=&quot;yes&quot;?&gt;&#xd;
&lt;modularPfContratoEntrada&gt;&#xd;
	&lt;usuario&gt;${codigo8}&lt;/usuario&gt;&#xd;
	&lt;senha&gt;${senha8}&lt;/senha&gt;&#xd;
	&lt;cpf&gt;${documento}&lt;/cpf&gt;&#xd;
	&lt;blocos&gt;&#xd;
		&lt;bloco&gt;identificacaoCompleta&lt;/bloco&gt;&#xd;
		&lt;bloco&gt;identificacaoResumida&lt;/bloco&gt;&#xd;
		&lt;bloco&gt;situacaoReceita&lt;/bloco&gt;&#xd;
		&lt;bloco&gt;situacaoEleitoral&lt;/bloco&gt;&#xd;
		&lt;bloco&gt;outrasGrafias&lt;/bloco&gt;&#xd;
		&lt;bloco&gt;melhorTelefone&lt;/bloco&gt;&#xd;
		&lt;bloco&gt;outrosTelefones&lt;/bloco&gt;&#xd;
		&lt;bloco&gt;melhorEndereco&lt;/bloco&gt;&#xd;
		&lt;bloco&gt;outrosEnderecos&lt;/bloco&gt;&#xd;
	&lt;/blocos&gt;&#xd;
	&lt;tipoCredito&gt;CC&lt;/tipoCredito&gt;&#xd;
&lt;/modularPfContratoEntrada&gt;&#xd;
</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${host}</stringProp>
          <stringProp name="HTTPSampler.port">${port}</stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">ModularPFXmlWeb/servicos/geral/3.1</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResultSaver guiclass="ResultSaverGui" testclass="ResultSaver" testname="Salvar" enabled="true">
            <stringProp name="FileSaver.filename">${path}\\modular_pf\\geral 3.1_${documento}.xml</stringProp>
            <boolProp name="FileSaver.errorsonly">false</boolProp>
            <boolProp name="FileSaver.skipautonumber">true</boolProp>
            <boolProp name="FileSaver.skipsuffix">true</boolProp>
            <boolProp name="FileSaver.successonly">true</boolProp>
          </ResultSaver>
          <hashTree/>
        </hashTree>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="Modular PF 3.2" enabled="false">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Controlador de Iteração" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <intProp name="LoopController.loops">-1</intProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">30</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <longProp name="ThreadGroup.start_time">1537884390000</longProp>
        <longProp name="ThreadGroup.end_time">1537884390000</longProp>
        <boolProp name="ThreadGroup.scheduler">true</boolProp>
        <stringProp name="ThreadGroup.duration">300</stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
      </ThreadGroup>
      <hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Modular PF Cadastral 3.2" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot; standalone=&quot;yes&quot;?&gt;&#xd;
&lt;modularPfContratoEntrada&gt;&#xd;
	&lt;usuario&gt;${codigo8}&lt;/usuario&gt;&#xd;
	&lt;senha&gt;${senha8}&lt;/senha&gt;&#xd;
	&lt;cpf&gt;${documento}&lt;/cpf&gt;&#xd;
	&lt;blocos&gt;&#xd;
		&lt;bloco&gt;identificacaoCompleta&lt;/bloco&gt;&#xd;
		&lt;bloco&gt;identificacaoResumida&lt;/bloco&gt;&#xd;
		&lt;bloco&gt;situacaoReceita&lt;/bloco&gt;&#xd;
		&lt;bloco&gt;situacaoEleitoral&lt;/bloco&gt;&#xd;
		&lt;bloco&gt;outrasGrafias&lt;/bloco&gt;&#xd;
		&lt;bloco&gt;melhorTelefone&lt;/bloco&gt;&#xd;
		&lt;bloco&gt;outrosTelefones&lt;/bloco&gt;&#xd;
		&lt;bloco&gt;melhorEndereco&lt;/bloco&gt;&#xd;
		&lt;bloco&gt;outrosEnderecos&lt;/bloco&gt;&#xd;
	&lt;/blocos&gt;&#xd;
	&lt;tipoCredito&gt;CC&lt;/tipoCredito&gt;&#xd;
&lt;/modularPfContratoEntrada&gt;&#xd;
</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${host}</stringProp>
          <stringProp name="HTTPSampler.port">${port}</stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">ModularPFXmlWeb/servicos/cadastral/3.2</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResultSaver guiclass="ResultSaverGui" testclass="ResultSaver" testname="Salvar" enabled="true">
            <stringProp name="FileSaver.filename">${path}\\modular_pf\\cadastral 3.2_${documento}.xml</stringProp>
            <boolProp name="FileSaver.errorsonly">false</boolProp>
            <boolProp name="FileSaver.skipautonumber">true</boolProp>
            <boolProp name="FileSaver.skipsuffix">true</boolProp>
            <boolProp name="FileSaver.successonly">true</boolProp>
          </ResultSaver>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Modular PF Basico 3.2" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot; standalone=&quot;yes&quot;?&gt;&#xd;
&lt;modularPfContratoEntrada&gt;&#xd;
	&lt;usuario&gt;${codigo8}&lt;/usuario&gt;&#xd;
	&lt;senha&gt;${senha8}&lt;/senha&gt;&#xd;
	&lt;cpf&gt;${documento}&lt;/cpf&gt;&#xd;
	&lt;blocos&gt;&#xd;
		&lt;bloco&gt;identificacaoCompleta&lt;/bloco&gt;&#xd;
		&lt;bloco&gt;identificacaoResumida&lt;/bloco&gt;&#xd;
		&lt;bloco&gt;situacaoReceita&lt;/bloco&gt;&#xd;
		&lt;bloco&gt;situacaoEleitoral&lt;/bloco&gt;&#xd;
		&lt;bloco&gt;outrasGrafias&lt;/bloco&gt;&#xd;
		&lt;bloco&gt;melhorTelefone&lt;/bloco&gt;&#xd;
		&lt;bloco&gt;outrosTelefones&lt;/bloco&gt;&#xd;
		&lt;bloco&gt;melhorEndereco&lt;/bloco&gt;&#xd;
		&lt;bloco&gt;outrosEnderecos&lt;/bloco&gt;&#xd;
	&lt;/blocos&gt;&#xd;
	&lt;tipoCredito&gt;CC&lt;/tipoCredito&gt;&#xd;
	&lt;uf&gt;SP&lt;/uf&gt;&#xd;
	&lt;cmc7&gt;237035340180002295194109408016&lt;/cmc7&gt;&#xd;
&lt;/modularPfContratoEntrada&gt;&#xd;
</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${host}</stringProp>
          <stringProp name="HTTPSampler.port">${port}</stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">ModularPFXmlWeb/servicos/basico/3.2</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResultSaver guiclass="ResultSaverGui" testclass="ResultSaver" testname="Salvar" enabled="true">
            <stringProp name="FileSaver.filename">${path}\\modular_pf\\basico 3.2_${documento}.xml</stringProp>
            <boolProp name="FileSaver.errorsonly">false</boolProp>
            <boolProp name="FileSaver.skipautonumber">true</boolProp>
            <boolProp name="FileSaver.skipsuffix">true</boolProp>
            <boolProp name="FileSaver.successonly">true</boolProp>
          </ResultSaver>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Modular PF Intermediario 3.2" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot; standalone=&quot;yes&quot;?&gt;&#xd;
&lt;modularPfContratoEntrada&gt;&#xd;
	&lt;usuario&gt;${codigo8}&lt;/usuario&gt;&#xd;
	&lt;senha&gt;${senha8}&lt;/senha&gt;&#xd;
	&lt;cpf&gt;${documento}&lt;/cpf&gt;&#xd;
	&lt;blocos&gt;&#xd;
		&lt;bloco&gt;identificacaoCompleta&lt;/bloco&gt;&#xd;
		&lt;bloco&gt;identificacaoResumida&lt;/bloco&gt;&#xd;
		&lt;bloco&gt;situacaoReceita&lt;/bloco&gt;&#xd;
		&lt;bloco&gt;situacaoEleitoral&lt;/bloco&gt;&#xd;
		&lt;bloco&gt;outrasGrafias&lt;/bloco&gt;&#xd;
		&lt;bloco&gt;melhorTelefone&lt;/bloco&gt;&#xd;
		&lt;bloco&gt;outrosTelefones&lt;/bloco&gt;&#xd;
		&lt;bloco&gt;melhorEndereco&lt;/bloco&gt;&#xd;
		&lt;bloco&gt;outrosEnderecos&lt;/bloco&gt;&#xd;
	&lt;/blocos&gt;&#xd;
	&lt;tipoCredito&gt;CC&lt;/tipoCredito&gt;&#xd;
&lt;/modularPfContratoEntrada&gt;&#xd;
</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${host}</stringProp>
          <stringProp name="HTTPSampler.port">${port}</stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">ModularPFXmlWeb/servicos/intermediario/3.2</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResultSaver guiclass="ResultSaverGui" testclass="ResultSaver" testname="Salvar" enabled="true">
            <stringProp name="FileSaver.filename">${path}\\modular_pf\\intermediario 3.2_${documento}.xml</stringProp>
            <boolProp name="FileSaver.errorsonly">false</boolProp>
            <boolProp name="FileSaver.skipautonumber">true</boolProp>
            <boolProp name="FileSaver.skipsuffix">true</boolProp>
            <boolProp name="FileSaver.successonly">true</boolProp>
          </ResultSaver>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Modular PF Completo 3.2" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot; standalone=&quot;yes&quot;?&gt;&#xd;
&lt;modularPfContratoEntrada&gt;&#xd;
	&lt;usuario&gt;${codigo8}&lt;/usuario&gt;&#xd;
	&lt;senha&gt;${senha8}&lt;/senha&gt;&#xd;
	&lt;cpf&gt;${documento}&lt;/cpf&gt;&#xd;
	&lt;blocos&gt;&#xd;
		&lt;bloco&gt;identificacaoCompleta&lt;/bloco&gt;&#xd;
		&lt;bloco&gt;identificacaoResumida&lt;/bloco&gt;&#xd;
		&lt;bloco&gt;situacaoReceita&lt;/bloco&gt;&#xd;
		&lt;bloco&gt;situacaoEleitoral&lt;/bloco&gt;&#xd;
		&lt;bloco&gt;outrasGrafias&lt;/bloco&gt;&#xd;
		&lt;bloco&gt;melhorTelefone&lt;/bloco&gt;&#xd;
		&lt;bloco&gt;outrosTelefones&lt;/bloco&gt;&#xd;
		&lt;bloco&gt;melhorEndereco&lt;/bloco&gt;&#xd;
		&lt;bloco&gt;outrosEnderecos&lt;/bloco&gt;&#xd;
	&lt;/blocos&gt;&#xd;
	&lt;tipoCredito&gt;CC&lt;/tipoCredito&gt;&#xd;
	&lt;cmc7&gt;237035340180002295194109408016&lt;/cmc7&gt;&#xd;
&lt;/modularPfContratoEntrada&gt;&#xd;
</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${host}</stringProp>
          <stringProp name="HTTPSampler.port">${port}</stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">ModularPFXmlWeb/servicos/completo/3.2</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResultSaver guiclass="ResultSaverGui" testclass="ResultSaver" testname="Salvar" enabled="true">
            <stringProp name="FileSaver.filename">${path}\\modular_pf\\completo 3.2_${documento}.xml</stringProp>
            <boolProp name="FileSaver.errorsonly">false</boolProp>
            <boolProp name="FileSaver.skipautonumber">true</boolProp>
            <boolProp name="FileSaver.skipsuffix">true</boolProp>
            <boolProp name="FileSaver.successonly">true</boolProp>
          </ResultSaver>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Modular PF Geral 3.2 - ${documento}" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot; standalone=&quot;yes&quot;?&gt;&#xd;
&lt;modularPfContratoEntrada&gt;&#xd;
	&lt;usuario&gt;${codigo8}&lt;/usuario&gt;&#xd;
	&lt;senha&gt;${senha8}&lt;/senha&gt;&#xd;
	&lt;cpf&gt;${documento}&lt;/cpf&gt;&#xd;
	&lt;blocos&gt;&#xd;
		&lt;bloco&gt;identificacaoCompleta&lt;/bloco&gt;&#xd;
		&lt;bloco&gt;identificacaoResumida&lt;/bloco&gt;&#xd;
		&lt;bloco&gt;situacaoReceita&lt;/bloco&gt;&#xd;
		&lt;bloco&gt;situacaoEleitoral&lt;/bloco&gt;&#xd;
		&lt;bloco&gt;outrasGrafias&lt;/bloco&gt;&#xd;
		&lt;bloco&gt;melhorTelefone&lt;/bloco&gt;&#xd;
		&lt;bloco&gt;outrosTelefones&lt;/bloco&gt;&#xd;
		&lt;bloco&gt;melhorEndereco&lt;/bloco&gt;&#xd;
		&lt;bloco&gt;outrosEnderecos&lt;/bloco&gt;&#xd;
	&lt;/blocos&gt;&#xd;
	&lt;tipoCredito&gt;CC&lt;/tipoCredito&gt;&#xd;
&lt;/modularPfContratoEntrada&gt;&#xd;
</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${host}</stringProp>
          <stringProp name="HTTPSampler.port">${port}</stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">ModularPFXmlWeb/servicos/geral/3.2</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResultSaver guiclass="ResultSaverGui" testclass="ResultSaver" testname="Salvar" enabled="true">
            <stringProp name="FileSaver.filename">${path}\\modular_pf\\geral 3.2_${documento}.xml</stringProp>
            <boolProp name="FileSaver.errorsonly">false</boolProp>
            <boolProp name="FileSaver.skipautonumber">true</boolProp>
            <boolProp name="FileSaver.skipsuffix">true</boolProp>
            <boolProp name="FileSaver.successonly">true</boolProp>
          </ResultSaver>
          <hashTree/>
        </hashTree>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="Seguradoras" enabled="false">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Controlador de Iteração" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <intProp name="LoopController.loops">-1</intProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <longProp name="ThreadGroup.start_time">1537986578000</longProp>
        <longProp name="ThreadGroup.end_time">1537986578000</longProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
      </ThreadGroup>
      <hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Seguradoras - ${documento}" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Variáveis Definidas Pelo Usuário" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="xml" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
                <stringProp name="Argument.value">&lt;consulta_seguradoras+xmlns=&quot;http://equifax.com.br/seguradoras/entrada&quot;&gt;&lt;consulta&gt;&lt;documento&gt;${documento}&lt;/documento&gt;&lt;tipo_consulta&gt;PF&lt;/tipo_consulta&gt;&lt;/consulta&gt;&lt;credenciais&gt;&lt;codigo_cliente&gt;${codigo11}&lt;/codigo_cliente&gt;&lt;senha_cliente&gt;${senha11}&lt;/senha_cliente&gt;&lt;/credenciais&gt;&lt;/consulta_seguradoras&gt;</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">xml</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${host}</stringProp>
          <stringProp name="HTTPSampler.port">${port}</stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">SeguradorasWeb/consulta</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResultSaver guiclass="ResultSaverGui" testclass="ResultSaver" testname="Salvar" enabled="true">
            <stringProp name="FileSaver.filename">${path}\\seguradoras\\seguradoras_${documento}.xml</stringProp>
            <boolProp name="FileSaver.errorsonly">false</boolProp>
            <boolProp name="FileSaver.skipautonumber">true</boolProp>
            <boolProp name="FileSaver.skipsuffix">true</boolProp>
            <boolProp name="FileSaver.successonly">true</boolProp>
          </ResultSaver>
          <hashTree/>
        </hashTree>
      </hashTree>
      <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="Autenticação" enabled="true">
        <collectionProp name="Arguments.arguments">
          <elementProp name="codigo8" elementType="Argument">
            <stringProp name="Argument.name">codigo8</stringProp>
            <stringProp name="Argument.value">00315626</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="senha8" elementType="Argument">
            <stringProp name="Argument.name">senha8</stringProp>
            <stringProp name="Argument.value">TBL626</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="codigo11" elementType="Argument">
            <stringProp name="Argument.name">codigo11</stringProp>
            <stringProp name="Argument.value">11700038294</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="senha11" elementType="Argument">
            <stringProp name="Argument.name">senha11</stringProp>
            <stringProp name="Argument.value">1234</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="codigoSicoob" elementType="Argument">
            <stringProp name="Argument.name">codigoSicoob</stringProp>
            <stringProp name="Argument.value">00000045</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="senhaSicoob" elementType="Argument">
            <stringProp name="Argument.name">senhaSicoob</stringProp>
            <stringProp name="Argument.value">FELAS4</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
        </collectionProp>
      </Arguments>
      <hashTree/>
      <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="Host" enabled="false">
        <collectionProp name="Arguments.arguments">
          <elementProp name="host" elementType="Argument">
            <stringProp name="Argument.name">host</stringProp>
            <stringProp name="Argument.value">appcor01d</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="port" elementType="Argument">
            <stringProp name="Argument.name">port</stringProp>
            <stringProp name="Argument.value">9082</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
        </collectionProp>
      </Arguments>
      <hashTree/>
      <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="Host" enabled="false">
        <collectionProp name="Arguments.arguments">
          <elementProp name="host" elementType="Argument">
            <stringProp name="Argument.name">host</stringProp>
            <stringProp name="Argument.value">consumer.bvsnet.com.br</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="port" elementType="Argument">
            <stringProp name="Argument.name">port</stringProp>
            <stringProp name="Argument.value"></stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
        </collectionProp>
      </Arguments>
      <hashTree/>
      <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="Host" enabled="false">
        <collectionProp name="Arguments.arguments">
          <elementProp name="host" elementType="Argument">
            <stringProp name="Argument.name">host</stringProp>
            <stringProp name="Argument.value">consumerhom.bvsnet.com.br</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="port" elementType="Argument">
            <stringProp name="Argument.name">port</stringProp>
            <stringProp name="Argument.value"></stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
        </collectionProp>
      </Arguments>
      <hashTree/>
      <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="Host" enabled="true">
        <collectionProp name="Arguments.arguments">
          <elementProp name="host" elementType="Argument">
            <stringProp name="Argument.name">host</stringProp>
            <stringProp name="Argument.value">consumerisa.bvsnet.com.br</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="port" elementType="Argument">
            <stringProp name="Argument.name">port</stringProp>
            <stringProp name="Argument.value"></stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
        </collectionProp>
      </Arguments>
      <hashTree/>
      <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="Host" enabled="false">
        <collectionProp name="Arguments.arguments">
          <elementProp name="host" elementType="Argument">
            <stringProp name="Argument.name">host</stringProp>
            <stringProp name="Argument.value">pfisa.bvsnet.com.br</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="port" elementType="Argument">
            <stringProp name="Argument.name">port</stringProp>
            <stringProp name="Argument.value"></stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
        </collectionProp>
      </Arguments>
      <hashTree/>
      <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="Host" enabled="false">
        <collectionProp name="Arguments.arguments">
          <elementProp name="host" elementType="Argument">
            <stringProp name="Argument.name">host</stringProp>
            <stringProp name="Argument.value">pfhom.bvsnet.com.br</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="port" elementType="Argument">
            <stringProp name="Argument.name">port</stringProp>
            <stringProp name="Argument.value"></stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
        </collectionProp>
      </Arguments>
      <hashTree/>
      <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="Massa Unica" enabled="false">
        <collectionProp name="Arguments.arguments">
          <elementProp name="documento" elementType="Argument">
            <stringProp name="Argument.name">documento</stringProp>
            <stringProp name="Argument.value">81477589449</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
        </collectionProp>
      </Arguments>
      <hashTree/>
      <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="Documentos" enabled="true">
        <stringProp name="filename">massa_cpfs\endereco_70000_produtos.txt</stringProp>
        <stringProp name="fileEncoding"></stringProp>
        <stringProp name="variableNames">documento</stringProp>
        <boolProp name="ignoreFirstLine">false</boolProp>
        <stringProp name="delimiter">,</stringProp>
        <boolProp name="quotedData">false</boolProp>
        <boolProp name="recycle">true</boolProp>
        <boolProp name="stopThread">true</boolProp>
        <stringProp name="shareMode">shareMode.group</stringProp>
      </CSVDataSet>
      <hashTree/>
      <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="Salvar" enabled="true">
        <collectionProp name="Arguments.arguments">
          <elementProp name="path" elementType="Argument">
            <stringProp name="Argument.name">path</stringProp>
            <stringProp name="Argument.value">metricas\produtos</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
        </collectionProp>
      </Arguments>
      <hashTree/>
      <ResultCollector guiclass="TableVisualizer" testclass="ResultCollector" testname="Ver Resultados em Tabela" enabled="true">
        <boolProp name="ResultCollector.error_logging">false</boolProp>
        <objProp>
          <name>saveConfig</name>
          <value class="SampleSaveConfiguration">
            <time>true</time>
            <latency>true</latency>
            <timestamp>true</timestamp>
            <success>true</success>
            <label>true</label>
            <code>true</code>
            <message>true</message>
            <threadName>true</threadName>
            <dataType>true</dataType>
            <encoding>false</encoding>
            <assertions>true</assertions>
            <subresults>true</subresults>
            <responseData>false</responseData>
            <samplerData>false</samplerData>
            <xml>false</xml>
            <fieldNames>true</fieldNames>
            <responseHeaders>false</responseHeaders>
            <requestHeaders>false</requestHeaders>
            <responseDataOnError>false</responseDataOnError>
            <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
            <assertionsResultsToSave>0</assertionsResultsToSave>
            <bytes>true</bytes>
            <sentBytes>true</sentBytes>
            <threadCounts>true</threadCounts>
            <idleTime>true</idleTime>
            <connectTime>true</connectTime>
          </value>
        </objProp>
        <stringProp name="filename">${path}\resultados\resultados_em_tabela.csv</stringProp>
      </ResultCollector>
      <hashTree/>
      <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="Ver Árvore de Resultados" enabled="true">
        <boolProp name="ResultCollector.error_logging">false</boolProp>
        <objProp>
          <name>saveConfig</name>
          <value class="SampleSaveConfiguration">
            <time>true</time>
            <latency>true</latency>
            <timestamp>true</timestamp>
            <success>true</success>
            <label>true</label>
            <code>true</code>
            <message>true</message>
            <threadName>true</threadName>
            <dataType>true</dataType>
            <encoding>false</encoding>
            <assertions>true</assertions>
            <subresults>true</subresults>
            <responseData>false</responseData>
            <samplerData>false</samplerData>
            <xml>false</xml>
            <fieldNames>true</fieldNames>
            <responseHeaders>false</responseHeaders>
            <requestHeaders>false</requestHeaders>
            <responseDataOnError>false</responseDataOnError>
            <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
            <assertionsResultsToSave>0</assertionsResultsToSave>
            <bytes>true</bytes>
            <sentBytes>true</sentBytes>
            <threadCounts>true</threadCounts>
            <idleTime>true</idleTime>
            <connectTime>true</connectTime>
          </value>
        </objProp>
        <stringProp name="filename">${path}\resultados\resultados_em_arvore.csv</stringProp>
      </ResultCollector>
      <hashTree/>
    </hashTree>
  </hashTree>
</jmeterTestPlan>
