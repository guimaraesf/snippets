#hub.docker.com/_/maven
#   FROM java:8-jdk
   FROM adoptopenjdk/openjdk8:jdk8u202-b08-alpine-slim

# Copy local code to the container image.
   WORKDIR /api-base-cadastral
   COPY /api_base_cadastral/*.yml /api-base-cadastral/
   COPY /api_base_cadastral/*.jar /api-base-cadastral/
   COPY /api_base_cadastral/oauth2-redirect.html .
   COPY /api_base_cadastral/log4j2.xml .
   COPY /api_base_cadastral/public_key.der .
   COPY /api_base_cadastral/users_encrypted.txt .
   COPY /api_base_cadastral/pom.xml .
   COPY /api_base_cadastral/configs/* /api-base-cadastral/configs/
   COPY /api_base_cadastral/configs/util/* /api-base-cadastral/configs/util/
   COPY /api_base_cadastral/configs/log/* /api-base-cadastral/configs/log/

# Create environment variables for deployment.
   ENV profile="prod"

# Expose the application 
   EXPOSE 3333 5155 8085 9098 

# Run the web service on container startup.
   ENTRYPOINT ["java", "-Dcom.sun.management.jmxremote", "-Dcom.sun.management.jmxremote.port=9098", "-Dcom.sun.management.jmxremote.ssl=false", "-Dcom.sun.management.jmxremote.authenticate=false", "-Dcom.sun.management.jmxremote.local.only=false", "-Djava.rmi.server.hostname=localhost", "-server", "-XX:+UseStringDeduplication", "-XX:InitiatingHeapOccupancyPercent=70", "-XX:+UseG1GC", "-XX:MaxGCPauseMillis=200", "-XX:ParallelGCThreads=20", "-XX:ConcGCThreads=5", "-Dspring.profiles.active=${profile},bigtable", "-Dlogging.config=file:/api-base-cadastral/log4j2.xml", "-Dspring.config.location=file:/api-base-cadastral/application.yml,/api-base-cadastral/application-dePara.yml,/api-base-cadastral/application-socket.yml", "-jar", "/api-base-cadastral/core-api-1.0.jar"]

